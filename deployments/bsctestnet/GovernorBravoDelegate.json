{
  "address": "0x1789237eF2Db11D7fA8F91ff7FbdCAB40581C3F6",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "oldAdmin",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "newAdmin",
          "type": "address"
        }
      ],
      "name": "NewAdmin",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "oldGuardian",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "newGuardian",
          "type": "address"
        }
      ],
      "name": "NewGuardian",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "oldImplementation",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "newImplementation",
          "type": "address"
        }
      ],
      "name": "NewImplementation",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "oldPendingAdmin",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "newPendingAdmin",
          "type": "address"
        }
      ],
      "name": "NewPendingAdmin",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        }
      ],
      "name": "ProposalCanceled",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "proposer",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address[]",
          "name": "targets",
          "type": "address[]"
        },
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "values",
          "type": "uint256[]"
        },
        {
          "indexed": false,
          "internalType": "string[]",
          "name": "signatures",
          "type": "string[]"
        },
        {
          "indexed": false,
          "internalType": "bytes[]",
          "name": "calldatas",
          "type": "bytes[]"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "startBlock",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "endBlock",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "description",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint8",
          "name": "proposalType",
          "type": "uint8"
        }
      ],
      "name": "ProposalCreated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        }
      ],
      "name": "ProposalExecuted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "oldMaxOperations",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "newMaxOperations",
          "type": "uint256"
        }
      ],
      "name": "ProposalMaxOperationsUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "eta",
          "type": "uint256"
        }
      ],
      "name": "ProposalQueued",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "oldProposalThreshold",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "newProposalThreshold",
          "type": "uint256"
        }
      ],
      "name": "ProposalThresholdSet",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "votingPeriod",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "votingDelay",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "proposalThreshold",
          "type": "uint256"
        }
      ],
      "name": "SetProposalConfigs",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "oldMinVotingPeriod",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "newMinVotingPeriod",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "oldmaxVotingPeriod",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "newmaxVotingPeriod",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "oldminVotingDelay",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "newminVotingDelay",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "oldmaxVotingDelay",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "newmaxVotingDelay",
          "type": "uint256"
        }
      ],
      "name": "SetValidationParams",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "voter",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "proposalId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint8",
          "name": "support",
          "type": "uint8"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "votes",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "reason",
          "type": "string"
        }
      ],
      "name": "VoteCast",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "oldVotingDelay",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "newVotingDelay",
          "type": "uint256"
        }
      ],
      "name": "VotingDelaySet",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "oldVotingPeriod",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "newVotingPeriod",
          "type": "uint256"
        }
      ],
      "name": "VotingPeriodSet",
      "type": "event"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "BALLOT_TYPEHASH",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "DOMAIN_TYPEHASH",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "MAX_PROPOSAL_THRESHOLD",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "MIN_PROPOSAL_THRESHOLD",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "_acceptAdmin",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "governorAlpha",
          "type": "address"
        }
      ],
      "name": "_initiate",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "newGuardian",
          "type": "address"
        }
      ],
      "name": "_setGuardian",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "newPendingAdmin",
          "type": "address"
        }
      ],
      "name": "_setPendingAdmin",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "proposalMaxOperations_",
          "type": "uint256"
        }
      ],
      "name": "_setProposalMaxOperations",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "admin",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "proposalId",
          "type": "uint256"
        }
      ],
      "name": "cancel",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "proposalId",
          "type": "uint256"
        },
        {
          "internalType": "uint8",
          "name": "support",
          "type": "uint8"
        }
      ],
      "name": "castVote",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "proposalId",
          "type": "uint256"
        },
        {
          "internalType": "uint8",
          "name": "support",
          "type": "uint8"
        },
        {
          "internalType": "uint8",
          "name": "v",
          "type": "uint8"
        },
        {
          "internalType": "bytes32",
          "name": "r",
          "type": "bytes32"
        },
        {
          "internalType": "bytes32",
          "name": "s",
          "type": "bytes32"
        }
      ],
      "name": "castVoteBySig",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "proposalId",
          "type": "uint256"
        },
        {
          "internalType": "uint8",
          "name": "support",
          "type": "uint8"
        },
        {
          "internalType": "string",
          "name": "reason",
          "type": "string"
        }
      ],
      "name": "castVoteWithReason",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "proposalId",
          "type": "uint256"
        }
      ],
      "name": "execute",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "proposalId",
          "type": "uint256"
        }
      ],
      "name": "getActions",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "targets",
          "type": "address[]"
        },
        {
          "internalType": "uint256[]",
          "name": "values",
          "type": "uint256[]"
        },
        {
          "internalType": "string[]",
          "name": "signatures",
          "type": "string[]"
        },
        {
          "internalType": "bytes[]",
          "name": "calldatas",
          "type": "bytes[]"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "proposalId",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "voter",
          "type": "address"
        }
      ],
      "name": "getReceipt",
      "outputs": [
        {
          "components": [
            {
              "internalType": "bool",
              "name": "hasVoted",
              "type": "bool"
            },
            {
              "internalType": "uint8",
              "name": "support",
              "type": "uint8"
            },
            {
              "internalType": "uint96",
              "name": "votes",
              "type": "uint96"
            }
          ],
          "internalType": "struct GovernorBravoDelegateStorageV1.Receipt",
          "name": "",
          "type": "tuple"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "guardian",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "implementation",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "initialProposalId",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "xvsVault_",
          "type": "address"
        },
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "minVotingPeriod",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "maxVotingPeriod",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "minVotingDelay",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "maxVotingDelay",
              "type": "uint256"
            }
          ],
          "internalType": "struct GovernorBravoDelegateStorageV3.ValidationParams",
          "name": "validationParams_",
          "type": "tuple"
        },
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "votingDelay",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "votingPeriod",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "proposalThreshold",
              "type": "uint256"
            }
          ],
          "internalType": "struct GovernorBravoDelegateStorageV2.ProposalConfig[]",
          "name": "proposalConfigs_",
          "type": "tuple[]"
        },
        {
          "internalType": "contract TimelockInterface[]",
          "name": "timelocks",
          "type": "address[]"
        },
        {
          "internalType": "address",
          "name": "guardian_",
          "type": "address"
        }
      ],
      "name": "initialize",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "latestProposalIds",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "pendingAdmin",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "proposalConfigs",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "votingDelay",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "votingPeriod",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "proposalThreshold",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "proposalCount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "proposalMaxOperations",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "proposalThreshold",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "proposalTimelocks",
      "outputs": [
        {
          "internalType": "contract TimelockInterface",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "proposals",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "proposer",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "eta",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "startBlock",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "endBlock",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "forVotes",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "againstVotes",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "abstainVotes",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "canceled",
          "type": "bool"
        },
        {
          "internalType": "bool",
          "name": "executed",
          "type": "bool"
        },
        {
          "internalType": "uint8",
          "name": "proposalType",
          "type": "uint8"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address[]",
          "name": "targets",
          "type": "address[]"
        },
        {
          "internalType": "uint256[]",
          "name": "values",
          "type": "uint256[]"
        },
        {
          "internalType": "string[]",
          "name": "signatures",
          "type": "string[]"
        },
        {
          "internalType": "bytes[]",
          "name": "calldatas",
          "type": "bytes[]"
        },
        {
          "internalType": "string",
          "name": "description",
          "type": "string"
        },
        {
          "internalType": "enum GovernorBravoDelegateStorageV2.ProposalType",
          "name": "proposalType",
          "type": "uint8"
        }
      ],
      "name": "propose",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "proposalId",
          "type": "uint256"
        }
      ],
      "name": "queue",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "quorumVotes",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "votingDelay",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "votingPeriod",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "proposalThreshold",
              "type": "uint256"
            }
          ],
          "internalType": "struct GovernorBravoDelegateStorageV2.ProposalConfig[]",
          "name": "proposalConfigs_",
          "type": "tuple[]"
        }
      ],
      "name": "setProposalConfigs",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "minVotingPeriod",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "maxVotingPeriod",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "minVotingDelay",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "maxVotingDelay",
              "type": "uint256"
            }
          ],
          "internalType": "struct GovernorBravoDelegateStorageV3.ValidationParams",
          "name": "newValidationParams",
          "type": "tuple"
        }
      ],
      "name": "setValidationParams",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "proposalId",
          "type": "uint256"
        }
      ],
      "name": "state",
      "outputs": [
        {
          "internalType": "enum GovernorBravoDelegateStorageV1.ProposalState",
          "name": "",
          "type": "uint8"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "timelock",
      "outputs": [
        {
          "internalType": "contract TimelockInterface",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "validationParams",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "minVotingPeriod",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "maxVotingPeriod",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "minVotingDelay",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "maxVotingDelay",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "votingDelay",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "votingPeriod",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "xvsVault",
      "outputs": [
        {
          "internalType": "contract XvsVaultInterface",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "transactionHash": "0x3bcc7d00b6b3f38329c4ed7f9de4b543100314a39193a8a6d126baa264e6e893",
  "receipt": {
    "to": null,
    "from": "0x9cc6F5f16498fCEEf4D00A350Bd8F8921D304Dc9",
    "contractAddress": "0x1789237eF2Db11D7fA8F91ff7FbdCAB40581C3F6",
    "transactionIndex": 0,
    "gasUsed": "4405036",
    "logsBloom": "0x
    "blockHash": "0x80e13588eacb49814cc0a20af97b50cadbd906d1d4f28a1bba2cf28608b130c1",
    "transactionHash": "0x3bcc7d00b6b3f38329c4ed7f9de4b543100314a39193a8a6d126baa264e6e893",
    "logs": [],
    "blockNumber": 49861308,
    "cumulativeGasUsed": "4405036",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "numDeployments": 1,
  "solcInputHash": "51535febbc2fed693ac575b5f75633d2",
  "metadata": "{\"compiler\":{\"version\":\"0.5.16+commit.9c3226ce\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"oldAdmin\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newAdmin\",\"type\":\"address\"}],\"name\":\"NewAdmin\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"oldGuardian\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newGuardian\",\"type\":\"address\"}],\"name\":\"NewGuardian\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"oldImplementation\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newImplementation\",\"type\":\"address\"}],\"name\":\"NewImplementation\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"oldPendingAdmin\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newPendingAdmin\",\"type\":\"address\"}],\"name\":\"NewPendingAdmin\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"ProposalCanceled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"proposer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"targets\",\"type\":\"address[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"string[]\",\"name\":\"signatures\",\"type\":\"string[]\"},{\"indexed\":false,\"internalType\":\"bytes[]\",\"name\":\"calldatas\",\"type\":\"bytes[]\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"startBlock\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"endBlock\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"proposalType\",\"type\":\"uint8\"}],\"name\":\"ProposalCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"ProposalExecuted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"oldMaxOperations\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newMaxOperations\",\"type\":\"uint256\"}],\"name\":\"ProposalMaxOperationsUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"eta\",\"type\":\"uint256\"}],\"name\":\"ProposalQueued\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"oldProposalThreshold\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newProposalThreshold\",\"type\":\"uint256\"}],\"name\":\"ProposalThresholdSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"votingPeriod\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"votingDelay\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"proposalThreshold\",\"type\":\"uint256\"}],\"name\":\"SetProposalConfigs\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"oldMinVotingPeriod\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newMinVotingPeriod\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"oldmaxVotingPeriod\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newmaxVotingPeriod\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"oldminVotingDelay\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newminVotingDelay\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"oldmaxVotingDelay\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newmaxVotingDelay\",\"type\":\"uint256\"}],\"name\":\"SetValidationParams\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"voter\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"support\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"votes\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"reason\",\"type\":\"string\"}],\"name\":\"VoteCast\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"oldVotingDelay\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newVotingDelay\",\"type\":\"uint256\"}],\"name\":\"VotingDelaySet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"oldVotingPeriod\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newVotingPeriod\",\"type\":\"uint256\"}],\"name\":\"VotingPeriodSet\",\"type\":\"event\"},{\"constant\":true,\"inputs\":[],\"name\":\"BALLOT_TYPEHASH\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"DOMAIN_TYPEHASH\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"MAX_PROPOSAL_THRESHOLD\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"MIN_PROPOSAL_THRESHOLD\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"_acceptAdmin\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"governorAlpha\",\"type\":\"address\"}],\"name\":\"_initiate\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"newGuardian\",\"type\":\"address\"}],\"name\":\"_setGuardian\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"newPendingAdmin\",\"type\":\"address\"}],\"name\":\"_setPendingAdmin\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"proposalMaxOperations_\",\"type\":\"uint256\"}],\"name\":\"_setProposalMaxOperations\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"admin\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"}],\"name\":\"cancel\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"support\",\"type\":\"uint8\"}],\"name\":\"castVote\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"support\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"castVoteBySig\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"support\",\"type\":\"uint8\"},{\"internalType\":\"string\",\"name\":\"reason\",\"type\":\"string\"}],\"name\":\"castVoteWithReason\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"}],\"name\":\"execute\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"}],\"name\":\"getActions\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"targets\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"},{\"internalType\":\"string[]\",\"name\":\"signatures\",\"type\":\"string[]\"},{\"internalType\":\"bytes[]\",\"name\":\"calldatas\",\"type\":\"bytes[]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"voter\",\"type\":\"address\"}],\"name\":\"getReceipt\",\"outputs\":[{\"components\":[{\"internalType\":\"bool\",\"name\":\"hasVoted\",\"type\":\"bool\"},{\"internalType\":\"uint8\",\"name\":\"support\",\"type\":\"uint8\"},{\"internalType\":\"uint96\",\"name\":\"votes\",\"type\":\"uint96\"}],\"internalType\":\"struct GovernorBravoDelegateStorageV1.Receipt\",\"name\":\"\",\"type\":\"tuple\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"guardian\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"implementation\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"initialProposalId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"xvsVault_\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"minVotingPeriod\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxVotingPeriod\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minVotingDelay\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxVotingDelay\",\"type\":\"uint256\"}],\"internalType\":\"struct GovernorBravoDelegateStorageV3.ValidationParams\",\"name\":\"validationParams_\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"votingDelay\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"votingPeriod\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"proposalThreshold\",\"type\":\"uint256\"}],\"internalType\":\"struct GovernorBravoDelegateStorageV2.ProposalConfig[]\",\"name\":\"proposalConfigs_\",\"type\":\"tuple[]\"},{\"internalType\":\"contract TimelockInterface[]\",\"name\":\"timelocks\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"guardian_\",\"type\":\"address\"}],\"name\":\"initialize\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"latestProposalIds\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"pendingAdmin\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"proposalConfigs\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"votingDelay\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"votingPeriod\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"proposalThreshold\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"proposalCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"proposalMaxOperations\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"proposalThreshold\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"proposalTimelocks\",\"outputs\":[{\"internalType\":\"contract TimelockInterface\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"proposals\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"proposer\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"eta\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"startBlock\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"endBlock\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"forVotes\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"againstVotes\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"abstainVotes\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"canceled\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"executed\",\"type\":\"bool\"},{\"internalType\":\"uint8\",\"name\":\"proposalType\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"targets\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"},{\"internalType\":\"string[]\",\"name\":\"signatures\",\"type\":\"string[]\"},{\"internalType\":\"bytes[]\",\"name\":\"calldatas\",\"type\":\"bytes[]\"},{\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"},{\"internalType\":\"enum GovernorBravoDelegateStorageV2.ProposalType\",\"name\":\"proposalType\",\"type\":\"uint8\"}],\"name\":\"propose\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"}],\"name\":\"queue\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"quorumVotes\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"votingDelay\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"votingPeriod\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"proposalThreshold\",\"type\":\"uint256\"}],\"internalType\":\"struct GovernorBravoDelegateStorageV2.ProposalConfig[]\",\"name\":\"proposalConfigs_\",\"type\":\"tuple[]\"}],\"name\":\"setProposalConfigs\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"minVotingPeriod\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxVotingPeriod\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minVotingDelay\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxVotingDelay\",\"type\":\"uint256\"}],\"internalType\":\"struct GovernorBravoDelegateStorageV3.ValidationParams\",\"name\":\"newValidationParams\",\"type\":\"tuple\"}],\"name\":\"setValidationParams\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"}],\"name\":\"state\",\"outputs\":[{\"internalType\":\"enum GovernorBravoDelegateStorageV1.ProposalState\",\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"timelock\",\"outputs\":[{\"internalType\":\"contract TimelockInterface\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"validationParams\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"minVotingPeriod\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxVotingPeriod\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minVotingDelay\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxVotingDelay\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"votingDelay\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"votingPeriod\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"xvsVault\",\"outputs\":[{\"internalType\":\"contract XvsVaultInterface\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{\"_acceptAdmin()\":{\"details\":\"Admin function for pending admin to accept role and update admin\"},\"_initiate(address)\":{\"details\":\"Admin only. Sets initial proposal id which initiates the contract, ensuring a continuous proposal id count\",\"params\":{\"governorAlpha\":\"The address for the Governor to continue the proposal id count from\"}},\"_setGuardian(address)\":{\"params\":{\"newGuardian\":\"the address of the new guardian\"}},\"_setPendingAdmin(address)\":{\"details\":\"Admin function to begin change of admin. The newPendingAdmin must call `_acceptAdmin` to finalize the transfer.\",\"params\":{\"newPendingAdmin\":\"New pending admin.\"}},\"_setProposalMaxOperations(uint256)\":{\"details\":\"Admin only.\",\"params\":{\"proposalMaxOperations_\":\"Max proposal operations\"}},\"cancel(uint256)\":{\"params\":{\"proposalId\":\"The id of the proposal to cancel\"}},\"castVote(uint256,uint8)\":{\"params\":{\"proposalId\":\"The id of the proposal to vote on\",\"support\":\"The support value for the vote. 0=against, 1=for, 2=abstain\"}},\"castVoteBySig(uint256,uint8,uint8,bytes32,bytes32)\":{\"details\":\"External function that accepts EIP-712 signatures for voting on proposals.\",\"params\":{\"proposalId\":\"The id of the proposal to vote on\",\"r\":\"part of the ECDSA sig output\",\"s\":\"part of the ECDSA sig output\",\"support\":\"The support value for the vote. 0=against, 1=for, 2=abstain\",\"v\":\"recovery id of ECDSA signature\"}},\"castVoteWithReason(uint256,uint8,string)\":{\"params\":{\"proposalId\":\"The id of the proposal to vote on\",\"reason\":\"The reason given for the vote by the voter\",\"support\":\"The support value for the vote. 0=against, 1=for, 2=abstain\"}},\"execute(uint256)\":{\"params\":{\"proposalId\":\"The id of the proposal to execute\"}},\"getActions(uint256)\":{\"params\":{\"proposalId\":\"the id of the proposal\"},\"return\":\"targets, values, signatures, and calldatas of the proposal actions\"},\"getReceipt(uint256,address)\":{\"params\":{\"proposalId\":\"the id of proposal\",\"voter\":\"The address of the voter\"},\"return\":\"The voting receipt\"},\"initialize(address,(uint256,uint256,uint256,uint256),(uint256,uint256,uint256)[],address[],address)\":{\"params\":{\"proposalConfigs_\":\"Governance configs for each governance route\",\"timelocks\":\"Timelock addresses for each governance route\",\"xvsVault_\":\"The address of the XvsVault\"}},\"propose(address[],uint256[],string[],bytes[],string,uint8)\":{\"details\":\"NOTE: Proposals with duplicate set of actions can not be queued for execution. If the proposals consists of duplicate actions, it's recommended to split those actions into separate proposals\",\"params\":{\"calldatas\":\"Calldatas for proposal calls\",\"description\":\"String description of the proposal\",\"proposalType\":\"the type of the proposal (e.g NORMAL, FASTTRACK, CRITICAL)\",\"signatures\":\"Function signatures for proposal calls\",\"targets\":\"Target addresses for proposal calls\",\"values\":\"BNB values for proposal calls\"},\"return\":\"Proposal id of new proposal\"},\"queue(uint256)\":{\"params\":{\"proposalId\":\"The id of the proposal to queue\"}},\"state(uint256)\":{\"params\":{\"proposalId\":\"The id of the proposal\"},\"return\":\"Proposal state\"}},\"title\":\"GovernorBravoDelegate\"},\"userdoc\":{\"methods\":{\"_acceptAdmin()\":{\"notice\":\"Accepts transfer of admin rights. msg.sender must be pendingAdmin\"},\"_initiate(address)\":{\"notice\":\"Initiate the GovernorBravo contract\"},\"_setGuardian(address)\":{\"notice\":\"Sets the new governance guardian\"},\"_setPendingAdmin(address)\":{\"notice\":\"Begins transfer of admin rights. The newPendingAdmin must call `_acceptAdmin` to finalize the transfer.\"},\"_setProposalMaxOperations(uint256)\":{\"notice\":\"Set max proposal operations\"},\"cancel(uint256)\":{\"notice\":\"Cancels a proposal only if sender is the proposer, or proposer delegates dropped below proposal threshold\"},\"castVote(uint256,uint8)\":{\"notice\":\"Cast a vote for a proposal\"},\"castVoteBySig(uint256,uint8,uint8,bytes32,bytes32)\":{\"notice\":\"Cast a vote for a proposal by signature\"},\"castVoteWithReason(uint256,uint8,string)\":{\"notice\":\"Cast a vote for a proposal with a reason\"},\"execute(uint256)\":{\"notice\":\"Executes a queued proposal if eta has passed\"},\"getActions(uint256)\":{\"notice\":\"Gets actions of a proposal\"},\"getReceipt(uint256,address)\":{\"notice\":\"Gets the receipt for a voter on a given proposal\"},\"initialize(address,(uint256,uint256,uint256,uint256),(uint256,uint256,uint256)[],address[],address)\":{\"notice\":\"Used to initialize the contract during delegator contructor\"},\"propose(address[],uint256[],string[],bytes[],string,uint8)\":{\"notice\":\"Function used to propose a new proposal. Sender must have delegates above the proposal threshold. targets, values, signatures, and calldatas must be of equal length\"},\"queue(uint256)\":{\"notice\":\"Queues a proposal of state succeeded\"},\"setProposalConfigs((uint256,uint256,uint256)[])\":{\"notice\":\"Sets the configuration for different proposal types** @dev Requires validationParams to be configured before** @param proposalConfigs_ Array of proposal configuration structs to update\"},\"setValidationParams((uint256,uint256,uint256,uint256))\":{\"notice\":\"Sets the validation parameters for voting delay and voting period** @param newValidationParams Struct containing new minimum and maximum voting period and delay\"},\"state(uint256)\":{\"notice\":\"Gets the state of a proposal\"}},\"notice\":\"Venus Governance latest on chain governance includes several new features including variable proposal routes and fine grained pause control. Variable routes for proposals allows for governance paramaters such as voting threshold and timelocks to be customized based on the risk level and impact of the proposal. Added granularity to the pause control mechanism allows governance to pause individual actions on specific markets, which reduces impact on the protocol as a whole. This is particularly useful when applied to isolated pools. * The goal of **Governance** is to increase governance efficiency, while mitigating and eliminating malicious or erroneous proposals. * ## Details * Governance has **3 main contracts**: **GovernanceBravoDelegate, XVSVault, XVS** token. * - XVS token is the protocol token used for protocol users to cast their vote on submitted proposals. - XVSVault is the main staking contract for XVS. Users first stake their XVS in the vault and receive voting power proportional to their staked tokens that they can use to vote on proposals. Users also can choose to delegate their voting power to other users. * # Governor Bravo * `GovernanceBravoDelegate` is main Venus Governance contract. Users interact with it to: - Submit new proposal - Vote on a proposal - Cancel a proposal - Queue a proposal for execution with a timelock executor contract. `GovernanceBravoDelegate` uses the XVSVault to get restrict certain actions based on a user's voting power. The governance rules it inforces are: - A user's voting power must be greater than the `proposalThreshold` to submit a proposal - If a user's voting power drops below certain amount, anyone can cancel the the proposal. The governance guardian and proposal creator can also cancel a proposal at anytime before it is queued for execution. * ## Venus Improvement Proposal * Venus Governance allows for Venus Improvement Proposals (VIPs) to be categorized based on their impact and risk levels. This allows for optimizing proposals execution to allow for things such as expediting interest rate changes and quickly updating risk parameters, while moving slower on other types of proposals that can prevent a larger risk to the protocol and are not urgent. There are three different types of VIPs with different proposal paramters: * - `NORMAL` - `FASTTRACK` - `CRITICAL` * When initializing the `GovernorBravo` contract, the parameters for the three routes are set. The parameters are: * - `votingDelay`: The delay in blocks between submitting a proposal and when voting begins - `votingPeriod`: The number of blocks where voting will be open - `proposalThreshold`: The number of votes required in order submit a proposal * There is also a separate timelock executor contract for each route, which is used to dispatch the VIP for execution, giving even more control over the flow of each type of VIP. * ## Voting * After a VIP is proposed, voting is opened after the `votingDelay` has passed. For example, if `votingDelay = 0`, then voting will begin in the next block after the proposal has been submitted. After the delay, the proposal state is `ACTIVE` and users can cast their vote `for`, `against`, or `abstain`, weighted by their total voting power (tokens + delegated voting power). Abstaining from a voting allows for a vote to be cast and optionally include a comment, without the incrementing for or against vote count. The total voting power for the user is obtained by calling XVSVault's `getPriorVotes`. * `GovernorBravoDelegate` also accepts [EIP-712](https://eips.ethereum.org/EIPS/eip-712) signatures for voting on proposals via the external function `castVoteBySig`. * ## Delegating * A users voting power includes the amount of staked XVS the have staked as well as the votes delegate to them. Delegating is the process of a user loaning their voting power to another, so that the latter has the combined voting power of both users. This is an important feature because it allows for a user to let another user who they trust propose or vote in their place. * The delegation of votes happens through the `XVSVault` contract by calling the `delegate` or `delegateBySig` functions. These same functions can revert vote delegation by calling the same function with a value of `0`.\"}},\"settings\":{\"compilationTarget\":{\"contracts/Governance/GovernorBravoDelegate.sol\":\"GovernorBravoDelegate\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/Governance/GovernorBravoDelegate.sol\":{\"content\":\"pragma solidity ^0.5.16;\\npragma experimental ABIEncoderV2;\\n\\nimport \\\"./GovernorBravoInterfaces.sol\\\";\\n\\n/**\\n * @title GovernorBravoDelegate\\n * @notice Venus Governance latest on chain governance includes several new features including variable proposal routes and fine grained pause control.\\n * Variable routes for proposals allows for governance paramaters such as voting threshold and timelocks to be customized based on the risk level and\\n * impact of the proposal. Added granularity to the pause control mechanism allows governance to pause individual actions on specific markets,\\n * which reduces impact on the protocol as a whole. This is particularly useful when applied to isolated pools.\\n *\\n * The goal of **Governance** is to increase governance efficiency, while mitigating and eliminating malicious or erroneous proposals.\\n *\\n * ## Details\\n *\\n * Governance has **3 main contracts**: **GovernanceBravoDelegate, XVSVault, XVS** token.\\n *\\n * - XVS token is the protocol token used for protocol users to cast their vote on submitted proposals.\\n * - XVSVault is the main staking contract for XVS. Users first stake their XVS in the vault and receive voting power proportional to their staked\\n * tokens that they can use to vote on proposals. Users also can choose to delegate their voting power to other users.\\n *\\n * # Governor Bravo\\n *\\n * `GovernanceBravoDelegate` is main Venus Governance contract. Users interact with it to:\\n * - Submit new proposal\\n * - Vote on a proposal\\n * - Cancel a proposal\\n * - Queue a proposal for execution with a timelock executor contract.\\n * `GovernanceBravoDelegate` uses the XVSVault to get restrict certain actions based on a user's voting power. The governance rules it inforces are:\\n * - A user's voting power must be greater than the `proposalThreshold` to submit a proposal\\n * - If a user's voting power drops below certain amount, anyone can cancel the the proposal. The governance guardian and proposal creator can also\\n * cancel a proposal at anytime before it is queued for execution.\\n *\\n * ## Venus Improvement Proposal\\n *\\n * Venus Governance allows for Venus Improvement Proposals (VIPs) to be categorized based on their impact and risk levels. This allows for optimizing proposals\\n * execution to allow for things such as expediting interest rate changes and quickly updating risk parameters, while moving slower on other types of proposals\\n * that can prevent a larger risk to the protocol and are not urgent. There are three different types of VIPs with different proposal paramters:\\n *\\n * - `NORMAL`\\n * - `FASTTRACK`\\n * - `CRITICAL`\\n *\\n * When initializing the `GovernorBravo` contract, the parameters for the three routes are set. The parameters are:\\n *\\n * - `votingDelay`: The delay in blocks between submitting a proposal and when voting begins\\n * - `votingPeriod`: The number of blocks where voting will be open\\n * - `proposalThreshold`: The number of votes required in order submit a proposal\\n *\\n * There is also a separate timelock executor contract for each route, which is used to dispatch the VIP for execution, giving even more control over the\\n * flow of each type of VIP.\\n *\\n * ## Voting\\n *\\n * After a VIP is proposed, voting is opened after the `votingDelay` has passed. For example, if `votingDelay = 0`, then voting will begin in the next block\\n * after the proposal has been submitted. After the delay, the proposal state is `ACTIVE` and users can cast their vote `for`, `against`, or `abstain`,\\n * weighted by their total voting power (tokens + delegated voting power). Abstaining from a voting allows for a vote to be cast and optionally include a\\n * comment, without the incrementing for or against vote count. The total voting power for the user is obtained by calling XVSVault's `getPriorVotes`.\\n *\\n * `GovernorBravoDelegate` also accepts [EIP-712](https://eips.ethereum.org/EIPS/eip-712) signatures for voting on proposals via the external function\\n * `castVoteBySig`.\\n *\\n * ## Delegating\\n *\\n * A users voting power includes the amount of staked XVS the have staked as well as the votes delegate to them. Delegating is the process of a user loaning\\n * their voting power to another, so that the latter has the combined voting power of both users. This is an important feature because it allows for a user\\n * to let another user who they trust propose or vote in their place.\\n *\\n * The delegation of votes happens through the `XVSVault` contract by calling the `delegate` or `delegateBySig` functions. These same functions can revert\\n * vote delegation by calling the same function with a value of `0`.\\n */\\ncontract GovernorBravoDelegate is GovernorBravoDelegateStorageV3, GovernorBravoEvents {\\n    /// @notice The name of this contract\\n    string public constant name = \\\"Venus Governor Bravo\\\";\\n\\n    /// @notice The minimum setable proposal threshold\\n    uint public constant MIN_PROPOSAL_THRESHOLD = 150000e18; // 150,000 Xvs\\n\\n    /// @notice The maximum setable proposal threshold\\n    uint public constant MAX_PROPOSAL_THRESHOLD = 300000e18; //300,000 Xvs\\n\\n    /// @notice The number of votes in support of a proposal required in order for a quorum to be reached and for a vote to succeed\\n    uint public constant quorumVotes = 600000e18; // 600,000 = 2% of Xvs\\n\\n    /// @notice The EIP-712 typehash for the contract's domain\\n    bytes32 public constant DOMAIN_TYPEHASH =\\n        keccak256(\\\"EIP712Domain(string name,uint256 chainId,address verifyingContract)\\\");\\n\\n    /// @notice The EIP-712 typehash for the ballot struct used by the contract\\n    bytes32 public constant BALLOT_TYPEHASH = keccak256(\\\"Ballot(uint256 proposalId,uint8 support)\\\");\\n\\n    /**\\n     * @notice Used to initialize the contract during delegator contructor\\n     * @param xvsVault_ The address of the XvsVault\\n     * @param proposalConfigs_ Governance configs for each governance route\\n     * @param timelocks Timelock addresses for each governance route\\n     */\\n    function initialize(\\n        address xvsVault_,\\n        ValidationParams memory validationParams_,\\n        ProposalConfig[] memory proposalConfigs_,\\n        TimelockInterface[] memory timelocks,\\n        address guardian_\\n    ) public {\\n        require(address(proposalTimelocks[0]) == address(0), \\\"GovernorBravo::initialize: cannot initialize twice\\\");\\n        require(msg.sender == admin, \\\"GovernorBravo::initialize: admin only\\\");\\n        require(xvsVault_ != address(0), \\\"GovernorBravo::initialize: invalid xvs vault address\\\");\\n        require(guardian_ != address(0), \\\"GovernorBravo::initialize: invalid guardian\\\");\\n        require(\\n            timelocks.length == uint8(ProposalType.CRITICAL) + 1,\\n            \\\"GovernorBravo::initialize:number of timelocks should match number of governance routes\\\"\\n        );\\n        require(\\n            proposalConfigs_.length == uint8(ProposalType.CRITICAL) + 1,\\n            \\\"GovernorBravo::initialize:number of proposal configs should match number of governance routes\\\"\\n        );\\n\\n        xvsVault = XvsVaultInterface(xvsVault_);\\n        proposalMaxOperations = 10;\\n        guardian = guardian_;\\n\\n        // Set parameters for each Governance Route\\n        setValidationParams(validationParams_);\\n        setProposalConfigs(proposalConfigs_);\\n\\n        uint256 arrLength = timelocks.length;\\n        for (uint256 i; i < arrLength; ++i) {\\n            require(address(timelocks[i]) != address(0), \\\"GovernorBravo::initialize:invalid timelock address\\\");\\n            proposalTimelocks[i] = timelocks[i];\\n        }\\n    }\\n\\n    /**\\n     ** @notice Sets the validation parameters for voting delay and voting period\\n     ** @param newValidationParams Struct containing new minimum and maximum voting period and delay\\n     */\\n    function setValidationParams(ValidationParams memory newValidationParams) public {\\n        require(msg.sender == admin, \\\"GovernorBravo::setValidationParams: admin only\\\");\\n        require(\\n            newValidationParams.minVotingPeriod > 0 && newValidationParams.minVotingDelay > 0,\\n            \\\"GovernorBravo::setValidationParams: invalid params\\\"\\n        );\\n        emit SetValidationParams(\\n            validationParams.minVotingPeriod,\\n            newValidationParams.minVotingPeriod,\\n            validationParams.maxVotingPeriod,\\n            newValidationParams.maxVotingPeriod,\\n            validationParams.minVotingDelay,\\n            newValidationParams.minVotingDelay,\\n            validationParams.maxVotingDelay,\\n            newValidationParams.maxVotingDelay\\n        );\\n        validationParams = newValidationParams;\\n    }\\n\\n    /**\\n     ** @notice Sets the configuration for different proposal types\\n     ** @dev Requires validationParams to be configured before\\n     ** @param proposalConfigs_ Array of proposal configuration structs to update\\n     */\\n    function setProposalConfigs(ProposalConfig[] memory proposalConfigs_) public {\\n        require(msg.sender == admin, \\\"GovernorBravo::setProposalConfigs: admin only\\\");\\n        require(\\n            validationParams.minVotingPeriod > 0 &&\\n                validationParams.maxVotingPeriod > 0 &&\\n                validationParams.minVotingDelay > 0 &&\\n                validationParams.maxVotingDelay > 0,\\n            \\\"GovernorBravo::setProposalConfigs: validation params not configured yet\\\"\\n        );\\n        uint256 arrLength = proposalConfigs_.length;\\n        for (uint256 i; i < arrLength; ++i) {\\n            require(\\n                proposalConfigs_[i].votingPeriod >= validationParams.minVotingPeriod,\\n                \\\"GovernorBravo::setProposalConfigs: invalid min voting period\\\"\\n            );\\n            require(\\n                proposalConfigs_[i].votingPeriod <= validationParams.maxVotingPeriod,\\n                \\\"GovernorBravo::setProposalConfigs: invalid max voting period\\\"\\n            );\\n            require(\\n                proposalConfigs_[i].votingDelay >= validationParams.minVotingDelay,\\n                \\\"GovernorBravo::setProposalConfigs: invalid min voting delay\\\"\\n            );\\n            require(\\n                proposalConfigs_[i].votingDelay <= validationParams.maxVotingDelay,\\n                \\\"GovernorBravo::setProposalConfigs: invalid max voting delay\\\"\\n            );\\n            require(\\n                proposalConfigs_[i].proposalThreshold >= MIN_PROPOSAL_THRESHOLD,\\n                \\\"GovernorBravo::setProposalConfigs: invalid min proposal threshold\\\"\\n            );\\n            require(\\n                proposalConfigs_[i].proposalThreshold <= MAX_PROPOSAL_THRESHOLD,\\n                \\\"GovernorBravo::setProposalConfigs: invalid max proposal threshold\\\"\\n            );\\n\\n            proposalConfigs[i] = proposalConfigs_[i];\\n            emit SetProposalConfigs(\\n                proposalConfigs_[i].votingPeriod,\\n                proposalConfigs_[i].votingDelay,\\n                proposalConfigs_[i].proposalThreshold\\n            );\\n        }\\n    }\\n\\n    /**\\n     * @notice Function used to propose a new proposal. Sender must have delegates above the proposal threshold.\\n     * targets, values, signatures, and calldatas must be of equal length\\n     * @dev NOTE: Proposals with duplicate set of actions can not be queued for execution. If the proposals consists\\n     *  of duplicate actions, it's recommended to split those actions into separate proposals\\n     * @param targets Target addresses for proposal calls\\n     * @param values BNB values for proposal calls\\n     * @param signatures Function signatures for proposal calls\\n     * @param calldatas Calldatas for proposal calls\\n     * @param description String description of the proposal\\n     * @param proposalType the type of the proposal (e.g NORMAL, FASTTRACK, CRITICAL)\\n     * @return Proposal id of new proposal\\n     */\\n    function propose(\\n        address[] memory targets,\\n        uint[] memory values,\\n        string[] memory signatures,\\n        bytes[] memory calldatas,\\n        string memory description,\\n        ProposalType proposalType\\n    ) public returns (uint) {\\n        // Reject proposals before initiating as Governor\\n        require(initialProposalId != 0, \\\"GovernorBravo::propose: Governor Bravo not active\\\");\\n        require(\\n            xvsVault.getPriorVotes(msg.sender, sub256(block.number, 1)) >=\\n                proposalConfigs[uint8(proposalType)].proposalThreshold,\\n            \\\"GovernorBravo::propose: proposer votes below proposal threshold\\\"\\n        );\\n        require(\\n            targets.length == values.length &&\\n                targets.length == signatures.length &&\\n                targets.length == calldatas.length,\\n            \\\"GovernorBravo::propose: proposal function information arity mismatch\\\"\\n        );\\n        require(targets.length != 0, \\\"GovernorBravo::propose: must provide actions\\\");\\n        require(targets.length <= proposalMaxOperations, \\\"GovernorBravo::propose: too many actions\\\");\\n\\n        uint latestProposalId = latestProposalIds[msg.sender];\\n        if (latestProposalId != 0) {\\n            ProposalState proposersLatestProposalState = state(latestProposalId);\\n            require(\\n                proposersLatestProposalState != ProposalState.Active,\\n                \\\"GovernorBravo::propose: one live proposal per proposer, found an already active proposal\\\"\\n            );\\n            require(\\n                proposersLatestProposalState != ProposalState.Pending,\\n                \\\"GovernorBravo::propose: one live proposal per proposer, found an already pending proposal\\\"\\n            );\\n        }\\n\\n        uint startBlock = add256(block.number, proposalConfigs[uint8(proposalType)].votingDelay);\\n        uint endBlock = add256(startBlock, proposalConfigs[uint8(proposalType)].votingPeriod);\\n\\n        proposalCount++;\\n        Proposal memory newProposal = Proposal({\\n            id: proposalCount,\\n            proposer: msg.sender,\\n            eta: 0,\\n            targets: targets,\\n            values: values,\\n            signatures: signatures,\\n            calldatas: calldatas,\\n            startBlock: startBlock,\\n            endBlock: endBlock,\\n            forVotes: 0,\\n            againstVotes: 0,\\n            abstainVotes: 0,\\n            canceled: false,\\n            executed: false,\\n            proposalType: uint8(proposalType)\\n        });\\n\\n        proposals[newProposal.id] = newProposal;\\n        latestProposalIds[newProposal.proposer] = newProposal.id;\\n\\n        emit ProposalCreated(\\n            newProposal.id,\\n            msg.sender,\\n            targets,\\n            values,\\n            signatures,\\n            calldatas,\\n            startBlock,\\n            endBlock,\\n            description,\\n            uint8(proposalType)\\n        );\\n        return newProposal.id;\\n    }\\n\\n    /**\\n     * @notice Queues a proposal of state succeeded\\n     * @param proposalId The id of the proposal to queue\\n     */\\n    function queue(uint proposalId) external {\\n        require(\\n            state(proposalId) == ProposalState.Succeeded,\\n            \\\"GovernorBravo::queue: proposal can only be queued if it is succeeded\\\"\\n        );\\n        Proposal storage proposal = proposals[proposalId];\\n        uint eta = add256(block.timestamp, proposalTimelocks[uint8(proposal.proposalType)].delay());\\n        for (uint i; i < proposal.targets.length; ++i) {\\n            queueOrRevertInternal(\\n                proposal.targets[i],\\n                proposal.values[i],\\n                proposal.signatures[i],\\n                proposal.calldatas[i],\\n                eta,\\n                uint8(proposal.proposalType)\\n            );\\n        }\\n        proposal.eta = eta;\\n        emit ProposalQueued(proposalId, eta);\\n    }\\n\\n    function queueOrRevertInternal(\\n        address target,\\n        uint value,\\n        string memory signature,\\n        bytes memory data,\\n        uint eta,\\n        uint8 proposalType\\n    ) internal {\\n        require(\\n            !proposalTimelocks[proposalType].queuedTransactions(\\n                keccak256(abi.encode(target, value, signature, data, eta))\\n            ),\\n            \\\"GovernorBravo::queueOrRevertInternal: identical proposal action already queued at eta\\\"\\n        );\\n        proposalTimelocks[proposalType].queueTransaction(target, value, signature, data, eta);\\n    }\\n\\n    /**\\n     * @notice Executes a queued proposal if eta has passed\\n     * @param proposalId The id of the proposal to execute\\n     */\\n    function execute(uint proposalId) external {\\n        require(\\n            state(proposalId) == ProposalState.Queued,\\n            \\\"GovernorBravo::execute: proposal can only be executed if it is queued\\\"\\n        );\\n        Proposal storage proposal = proposals[proposalId];\\n        proposal.executed = true;\\n        for (uint i; i < proposal.targets.length; ++i) {\\n            proposalTimelocks[uint8(proposal.proposalType)].executeTransaction(\\n                proposal.targets[i],\\n                proposal.values[i],\\n                proposal.signatures[i],\\n                proposal.calldatas[i],\\n                proposal.eta\\n            );\\n        }\\n        emit ProposalExecuted(proposalId);\\n    }\\n\\n    /**\\n     * @notice Cancels a proposal only if sender is the proposer, or proposer delegates dropped below proposal threshold\\n     * @param proposalId The id of the proposal to cancel\\n     */\\n    function cancel(uint proposalId) external {\\n        require(state(proposalId) != ProposalState.Executed, \\\"GovernorBravo::cancel: cannot cancel executed proposal\\\");\\n\\n        Proposal storage proposal = proposals[proposalId];\\n        require(\\n            msg.sender == guardian ||\\n                msg.sender == proposal.proposer ||\\n                xvsVault.getPriorVotes(proposal.proposer, sub256(block.number, 1)) <\\n                proposalConfigs[proposal.proposalType].proposalThreshold,\\n            \\\"GovernorBravo::cancel: proposer above threshold\\\"\\n        );\\n\\n        proposal.canceled = true;\\n        for (uint i = 0; i < proposal.targets.length; i++) {\\n            proposalTimelocks[proposal.proposalType].cancelTransaction(\\n                proposal.targets[i],\\n                proposal.values[i],\\n                proposal.signatures[i],\\n                proposal.calldatas[i],\\n                proposal.eta\\n            );\\n        }\\n\\n        emit ProposalCanceled(proposalId);\\n    }\\n\\n    /**\\n     * @notice Gets actions of a proposal\\n     * @param proposalId the id of the proposal\\n     * @return targets, values, signatures, and calldatas of the proposal actions\\n     */\\n    function getActions(\\n        uint proposalId\\n    )\\n        external\\n        view\\n        returns (address[] memory targets, uint[] memory values, string[] memory signatures, bytes[] memory calldatas)\\n    {\\n        Proposal storage p = proposals[proposalId];\\n        return (p.targets, p.values, p.signatures, p.calldatas);\\n    }\\n\\n    /**\\n     * @notice Gets the receipt for a voter on a given proposal\\n     * @param proposalId the id of proposal\\n     * @param voter The address of the voter\\n     * @return The voting receipt\\n     */\\n    function getReceipt(uint proposalId, address voter) external view returns (Receipt memory) {\\n        return proposals[proposalId].receipts[voter];\\n    }\\n\\n    /**\\n     * @notice Gets the state of a proposal\\n     * @param proposalId The id of the proposal\\n     * @return Proposal state\\n     */\\n    function state(uint proposalId) public view returns (ProposalState) {\\n        require(\\n            proposalCount >= proposalId && proposalId > initialProposalId,\\n            \\\"GovernorBravo::state: invalid proposal id\\\"\\n        );\\n        Proposal storage proposal = proposals[proposalId];\\n        if (proposal.canceled) {\\n            return ProposalState.Canceled;\\n        } else if (block.number <= proposal.startBlock) {\\n            return ProposalState.Pending;\\n        } else if (block.number <= proposal.endBlock) {\\n            return ProposalState.Active;\\n        } else if (proposal.forVotes <= proposal.againstVotes || proposal.forVotes < quorumVotes) {\\n            return ProposalState.Defeated;\\n        } else if (proposal.eta == 0) {\\n            return ProposalState.Succeeded;\\n        } else if (proposal.executed) {\\n            return ProposalState.Executed;\\n        } else if (\\n            block.timestamp >= add256(proposal.eta, proposalTimelocks[uint8(proposal.proposalType)].GRACE_PERIOD())\\n        ) {\\n            return ProposalState.Expired;\\n        } else {\\n            return ProposalState.Queued;\\n        }\\n    }\\n\\n    /**\\n     * @notice Cast a vote for a proposal\\n     * @param proposalId The id of the proposal to vote on\\n     * @param support The support value for the vote. 0=against, 1=for, 2=abstain\\n     */\\n    function castVote(uint proposalId, uint8 support) external {\\n        emit VoteCast(msg.sender, proposalId, support, castVoteInternal(msg.sender, proposalId, support), \\\"\\\");\\n    }\\n\\n    /**\\n     * @notice Cast a vote for a proposal with a reason\\n     * @param proposalId The id of the proposal to vote on\\n     * @param support The support value for the vote. 0=against, 1=for, 2=abstain\\n     * @param reason The reason given for the vote by the voter\\n     */\\n    function castVoteWithReason(uint proposalId, uint8 support, string calldata reason) external {\\n        emit VoteCast(msg.sender, proposalId, support, castVoteInternal(msg.sender, proposalId, support), reason);\\n    }\\n\\n    /**\\n     * @notice Cast a vote for a proposal by signature\\n     * @dev External function that accepts EIP-712 signatures for voting on proposals.\\n     * @param proposalId The id of the proposal to vote on\\n     * @param support The support value for the vote. 0=against, 1=for, 2=abstain\\n     * @param v recovery id of ECDSA signature\\n     * @param r part of the ECDSA sig output\\n     * @param s part of the ECDSA sig output\\n     */\\n    function castVoteBySig(uint proposalId, uint8 support, uint8 v, bytes32 r, bytes32 s) external {\\n        bytes32 domainSeparator = keccak256(\\n            abi.encode(DOMAIN_TYPEHASH, keccak256(bytes(name)), getChainIdInternal(), address(this))\\n        );\\n        bytes32 structHash = keccak256(abi.encode(BALLOT_TYPEHASH, proposalId, support));\\n        bytes32 digest = keccak256(abi.encodePacked(\\\"\\\\x19\\\\x01\\\", domainSeparator, structHash));\\n        address signatory = ecrecover(digest, v, r, s);\\n        require(signatory != address(0), \\\"GovernorBravo::castVoteBySig: invalid signature\\\");\\n        emit VoteCast(signatory, proposalId, support, castVoteInternal(signatory, proposalId, support), \\\"\\\");\\n    }\\n\\n    /**\\n     * @notice Internal function that caries out voting logic\\n     * @param voter The voter that is casting their vote\\n     * @param proposalId The id of the proposal to vote on\\n     * @param support The support value for the vote. 0=against, 1=for, 2=abstain\\n     * @return The number of votes cast\\n     */\\n    function castVoteInternal(address voter, uint proposalId, uint8 support) internal returns (uint96) {\\n        require(state(proposalId) == ProposalState.Active, \\\"GovernorBravo::castVoteInternal: voting is closed\\\");\\n        require(support <= 2, \\\"GovernorBravo::castVoteInternal: invalid vote type\\\");\\n        Proposal storage proposal = proposals[proposalId];\\n        Receipt storage receipt = proposal.receipts[voter];\\n        require(receipt.hasVoted == false, \\\"GovernorBravo::castVoteInternal: voter already voted\\\");\\n        uint96 votes = xvsVault.getPriorVotes(voter, proposal.startBlock);\\n\\n        if (support == 0) {\\n            proposal.againstVotes = add256(proposal.againstVotes, votes);\\n        } else if (support == 1) {\\n            proposal.forVotes = add256(proposal.forVotes, votes);\\n        } else if (support == 2) {\\n            proposal.abstainVotes = add256(proposal.abstainVotes, votes);\\n        }\\n\\n        receipt.hasVoted = true;\\n        receipt.support = support;\\n        receipt.votes = votes;\\n\\n        return votes;\\n    }\\n\\n    /**\\n     * @notice Sets the new governance guardian\\n     * @param newGuardian the address of the new guardian\\n     */\\n    function _setGuardian(address newGuardian) external {\\n        require(msg.sender == guardian || msg.sender == admin, \\\"GovernorBravo::_setGuardian: admin or guardian only\\\");\\n        require(newGuardian != address(0), \\\"GovernorBravo::_setGuardian: cannot live without a guardian\\\");\\n        address oldGuardian = guardian;\\n        guardian = newGuardian;\\n\\n        emit NewGuardian(oldGuardian, newGuardian);\\n    }\\n\\n    /**\\n     * @notice Initiate the GovernorBravo contract\\n     * @dev Admin only. Sets initial proposal id which initiates the contract, ensuring a continuous proposal id count\\n     * @param governorAlpha The address for the Governor to continue the proposal id count from\\n     */\\n    function _initiate(address governorAlpha) external {\\n        require(msg.sender == admin, \\\"GovernorBravo::_initiate: admin only\\\");\\n        require(initialProposalId == 0, \\\"GovernorBravo::_initiate: can only initiate once\\\");\\n        proposalCount = GovernorAlphaInterface(governorAlpha).proposalCount();\\n        initialProposalId = proposalCount;\\n        for (uint256 i; i < uint8(ProposalType.CRITICAL) + 1; ++i) {\\n            proposalTimelocks[i].acceptAdmin();\\n        }\\n    }\\n\\n    /**\\n     * @notice Set max proposal operations\\n     * @dev Admin only.\\n     * @param proposalMaxOperations_ Max proposal operations\\n     */\\n    function _setProposalMaxOperations(uint proposalMaxOperations_) external {\\n        require(msg.sender == admin, \\\"GovernorBravo::_setProposalMaxOperations: admin only\\\");\\n        uint oldProposalMaxOperations = proposalMaxOperations;\\n        proposalMaxOperations = proposalMaxOperations_;\\n\\n        emit ProposalMaxOperationsUpdated(oldProposalMaxOperations, proposalMaxOperations_);\\n    }\\n\\n    /**\\n     * @notice Begins transfer of admin rights. The newPendingAdmin must call `_acceptAdmin` to finalize the transfer.\\n     * @dev Admin function to begin change of admin. The newPendingAdmin must call `_acceptAdmin` to finalize the transfer.\\n     * @param newPendingAdmin New pending admin.\\n     */\\n    function _setPendingAdmin(address newPendingAdmin) external {\\n        // Check caller = admin\\n        require(msg.sender == admin, \\\"GovernorBravo:_setPendingAdmin: admin only\\\");\\n\\n        // Save current value, if any, for inclusion in log\\n        address oldPendingAdmin = pendingAdmin;\\n\\n        // Store pendingAdmin with value newPendingAdmin\\n        pendingAdmin = newPendingAdmin;\\n\\n        // Emit NewPendingAdmin(oldPendingAdmin, newPendingAdmin)\\n        emit NewPendingAdmin(oldPendingAdmin, newPendingAdmin);\\n    }\\n\\n    /**\\n     * @notice Accepts transfer of admin rights. msg.sender must be pendingAdmin\\n     * @dev Admin function for pending admin to accept role and update admin\\n     */\\n    function _acceptAdmin() external {\\n        // Check caller is pendingAdmin and pendingAdmin \\u2260 address(0)\\n        require(\\n            msg.sender == pendingAdmin && msg.sender != address(0),\\n            \\\"GovernorBravo:_acceptAdmin: pending admin only\\\"\\n        );\\n\\n        // Save current values for inclusion in log\\n        address oldAdmin = admin;\\n        address oldPendingAdmin = pendingAdmin;\\n\\n        // Store admin with value pendingAdmin\\n        admin = pendingAdmin;\\n\\n        // Clear the pending value\\n        pendingAdmin = address(0);\\n\\n        emit NewAdmin(oldAdmin, admin);\\n        emit NewPendingAdmin(oldPendingAdmin, pendingAdmin);\\n    }\\n\\n    function add256(uint256 a, uint256 b) internal pure returns (uint) {\\n        uint c = a + b;\\n        require(c >= a, \\\"addition overflow\\\");\\n        return c;\\n    }\\n\\n    function sub256(uint256 a, uint256 b) internal pure returns (uint) {\\n        require(b <= a, \\\"subtraction underflow\\\");\\n        return a - b;\\n    }\\n\\n    function getChainIdInternal() internal pure returns (uint) {\\n        uint chainId;\\n        assembly {\\n            chainId := chainid()\\n        }\\n        return chainId;\\n    }\\n}\\n\",\"keccak256\":\"0x89303445ef015800e859d51ef9e2605698ab46dcb973456545771fb45f75a788\"},\"contracts/Governance/GovernorBravoInterfaces.sol\":{\"content\":\"pragma solidity ^0.5.16;\\npragma experimental ABIEncoderV2;\\n\\n/**\\n * @title GovernorBravoEvents\\n * @author Venus\\n * @notice Set of events emitted by the GovernorBravo contracts.\\n */\\ncontract GovernorBravoEvents {\\n    /// @notice An event emitted when a new proposal is created\\n    event ProposalCreated(\\n        uint id,\\n        address proposer,\\n        address[] targets,\\n        uint[] values,\\n        string[] signatures,\\n        bytes[] calldatas,\\n        uint startBlock,\\n        uint endBlock,\\n        string description,\\n        uint8 proposalType\\n    );\\n\\n    /// @notice An event emitted when a vote has been cast on a proposal\\n    /// @param voter The address which casted a vote\\n    /// @param proposalId The proposal id which was voted on\\n    /// @param support Support value for the vote. 0=against, 1=for, 2=abstain\\n    /// @param votes Number of votes which were cast by the voter\\n    /// @param reason The reason given for the vote by the voter\\n    event VoteCast(address indexed voter, uint proposalId, uint8 support, uint votes, string reason);\\n\\n    /// @notice An event emitted when a proposal has been canceled\\n    event ProposalCanceled(uint id);\\n\\n    /// @notice An event emitted when a proposal has been queued in the Timelock\\n    event ProposalQueued(uint id, uint eta);\\n\\n    /// @notice An event emitted when a proposal has been executed in the Timelock\\n    event ProposalExecuted(uint id);\\n\\n    /// @notice An event emitted when the voting delay is set\\n    event VotingDelaySet(uint oldVotingDelay, uint newVotingDelay);\\n\\n    /// @notice An event emitted when the voting period is set\\n    event VotingPeriodSet(uint oldVotingPeriod, uint newVotingPeriod);\\n\\n    /// @notice Emitted when implementation is changed\\n    event NewImplementation(address oldImplementation, address newImplementation);\\n\\n    /// @notice Emitted when proposal threshold is set\\n    event ProposalThresholdSet(uint oldProposalThreshold, uint newProposalThreshold);\\n\\n    /// @notice Emitted when pendingAdmin is changed\\n    event NewPendingAdmin(address oldPendingAdmin, address newPendingAdmin);\\n\\n    /// @notice Emitted when pendingAdmin is accepted, which means admin is updated\\n    event NewAdmin(address oldAdmin, address newAdmin);\\n\\n    /// @notice Emitted when the new guardian address is set\\n    event NewGuardian(address oldGuardian, address newGuardian);\\n\\n    /// @notice Emitted when the maximum number of operations in one proposal is updated\\n    event ProposalMaxOperationsUpdated(uint oldMaxOperations, uint newMaxOperations);\\n\\n    /// @notice Emitted when the new validation params are set\\n    event SetValidationParams(\\n        uint256 oldMinVotingPeriod,\\n        uint256 newMinVotingPeriod,\\n        uint256 oldmaxVotingPeriod,\\n        uint256 newmaxVotingPeriod,\\n        uint256 oldminVotingDelay,\\n        uint256 newminVotingDelay,\\n        uint256 oldmaxVotingDelay,\\n        uint256 newmaxVotingDelay\\n    );\\n\\n    /// @notice Emitted when new Proposal configs added\\n    event SetProposalConfigs(uint256 votingPeriod, uint256 votingDelay, uint256 proposalThreshold);\\n}\\n\\n/**\\n * @title GovernorBravoDelegatorStorage\\n * @author Venus\\n * @notice Storage layout of the `GovernorBravoDelegator` contract\\n */\\ncontract GovernorBravoDelegatorStorage {\\n    /// @notice Administrator for this contract\\n    address public admin;\\n\\n    /// @notice Pending administrator for this contract\\n    address public pendingAdmin;\\n\\n    /// @notice Active brains of Governor\\n    address public implementation;\\n}\\n\\n/**\\n * @title GovernorBravoDelegateStorageV1\\n * @dev For future upgrades, do not change GovernorBravoDelegateStorageV1. Create a new\\n * contract which implements GovernorBravoDelegateStorageV1 and following the naming convention\\n * GovernorBravoDelegateStorageVX.\\n */\\ncontract GovernorBravoDelegateStorageV1 is GovernorBravoDelegatorStorage {\\n    /// @notice DEPRECATED The delay before voting on a proposal may take place, once proposed, in blocks\\n    uint public votingDelay;\\n\\n    /// @notice DEPRECATED The duration of voting on a proposal, in blocks\\n    uint public votingPeriod;\\n\\n    /// @notice DEPRECATED The number of votes required in order for a voter to become a proposer\\n    uint public proposalThreshold;\\n\\n    /// @notice Initial proposal id set at become\\n    uint public initialProposalId;\\n\\n    /// @notice The total number of proposals\\n    uint public proposalCount;\\n\\n    /// @notice The address of the Venus Protocol Timelock\\n    TimelockInterface public timelock;\\n\\n    /// @notice The address of the Venus governance token\\n    XvsVaultInterface public xvsVault;\\n\\n    /// @notice The official record of all proposals ever proposed\\n    mapping(uint => Proposal) public proposals;\\n\\n    /// @notice The latest proposal for each proposer\\n    mapping(address => uint) public latestProposalIds;\\n\\n    struct Proposal {\\n        /// @notice Unique id for looking up a proposal\\n        uint id;\\n        /// @notice Creator of the proposal\\n        address proposer;\\n        /// @notice The timestamp that the proposal will be available for execution, set once the vote succeeds\\n        uint eta;\\n        /// @notice the ordered list of target addresses for calls to be made\\n        address[] targets;\\n        /// @notice The ordered list of values (i.e. msg.value) to be passed to the calls to be made\\n        uint[] values;\\n        /// @notice The ordered list of function signatures to be called\\n        string[] signatures;\\n        /// @notice The ordered list of calldata to be passed to each call\\n        bytes[] calldatas;\\n        /// @notice The block at which voting begins: holders must delegate their votes prior to this block\\n        uint startBlock;\\n        /// @notice The block at which voting ends: votes must be cast prior to this block\\n        uint endBlock;\\n        /// @notice Current number of votes in favor of this proposal\\n        uint forVotes;\\n        /// @notice Current number of votes in opposition to this proposal\\n        uint againstVotes;\\n        /// @notice Current number of votes for abstaining for this proposal\\n        uint abstainVotes;\\n        /// @notice Flag marking whether the proposal has been canceled\\n        bool canceled;\\n        /// @notice Flag marking whether the proposal has been executed\\n        bool executed;\\n        /// @notice Receipts of ballots for the entire set of voters\\n        mapping(address => Receipt) receipts;\\n        /// @notice The type of the proposal\\n        uint8 proposalType;\\n    }\\n\\n    /// @notice Ballot receipt record for a voter\\n    struct Receipt {\\n        /// @notice Whether or not a vote has been cast\\n        bool hasVoted;\\n        /// @notice Whether or not the voter supports the proposal or abstains\\n        uint8 support;\\n        /// @notice The number of votes the voter had, which were cast\\n        uint96 votes;\\n    }\\n\\n    /// @notice Possible states that a proposal may be in\\n    enum ProposalState {\\n        Pending,\\n        Active,\\n        Canceled,\\n        Defeated,\\n        Succeeded,\\n        Queued,\\n        Expired,\\n        Executed\\n    }\\n\\n    /// @notice The maximum number of actions that can be included in a proposal\\n    uint public proposalMaxOperations;\\n\\n    /// @notice A privileged role that can cancel any proposal\\n    address public guardian;\\n}\\n\\n/**\\n * @title GovernorBravoDelegateStorageV2\\n * @dev For future upgrades, do not change GovernorBravoDelegateStorageV1. Create a new\\n * contract which implements GovernorBravoDelegateStorageV2 and following the naming convention\\n * GovernorBravoDelegateStorageVX.\\n */\\ncontract GovernorBravoDelegateStorageV2 is GovernorBravoDelegateStorageV1 {\\n    enum ProposalType {\\n        NORMAL,\\n        FASTTRACK,\\n        CRITICAL\\n    }\\n\\n    struct ProposalConfig {\\n        /// @notice The delay before voting on a proposal may take place, once proposed, in blocks\\n        uint256 votingDelay;\\n        /// @notice The duration of voting on a proposal, in blocks\\n        uint256 votingPeriod;\\n        /// @notice The number of votes required in order for a voter to become a proposer\\n        uint256 proposalThreshold;\\n    }\\n\\n    /// @notice mapping containing configuration for each proposal type\\n    mapping(uint => ProposalConfig) public proposalConfigs;\\n\\n    /// @notice mapping containing Timelock addresses for each proposal type\\n    mapping(uint => TimelockInterface) public proposalTimelocks;\\n}\\n\\ncontract GovernorBravoDelegateStorageV3 is GovernorBravoDelegateStorageV2 {\\n    struct ValidationParams {\\n        uint256 minVotingPeriod;\\n        uint256 maxVotingPeriod;\\n        uint256 minVotingDelay;\\n        uint256 maxVotingDelay;\\n    }\\n    /// @notice Stores the current minimum and maximum values of voting delay and voting period\\n    ValidationParams public validationParams;\\n}\\n\\n/**\\n * @title TimelockInterface\\n * @author Venus\\n * @notice Interface implemented by the Timelock contract.\\n */\\ninterface TimelockInterface {\\n    function delay() external view returns (uint);\\n\\n    function GRACE_PERIOD() external view returns (uint);\\n\\n    function acceptAdmin() external;\\n\\n    function queuedTransactions(bytes32 hash) external view returns (bool);\\n\\n    function queueTransaction(\\n        address target,\\n        uint value,\\n        string calldata signature,\\n        bytes calldata data,\\n        uint eta\\n    ) external returns (bytes32);\\n\\n    function cancelTransaction(\\n        address target,\\n        uint value,\\n        string calldata signature,\\n        bytes calldata data,\\n        uint eta\\n    ) external;\\n\\n    function executeTransaction(\\n        address target,\\n        uint value,\\n        string calldata signature,\\n        bytes calldata data,\\n        uint eta\\n    ) external payable returns (bytes memory);\\n}\\n\\ninterface XvsVaultInterface {\\n    function getPriorVotes(address account, uint blockNumber) external view returns (uint96);\\n}\\n\\ninterface GovernorAlphaInterface {\\n    /// @notice The total number of proposals\\n    function proposalCount() external returns (uint);\\n}\\n\",\"keccak256\":\"0xfd8d11de5ad8610cda28e1ea9994c177b222e301b09ca636b850ca1ad8ffd9fe\"}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b50614eb1806100206000396000f3fe608060405234801561001057600080fd5b50600436106102535760003560e01c806346416f9211610146578063da35c664116100c3578063e9c714f211610087578063e9c714f2146104d5578063ee9799ee146104dd578063f851a440146104f0578063f9d28b80146104f8578063fc4eee421461050b578063fe0d94c11461051357610253565b8063da35c6641461047f578063ddf0b00914610487578063deaaa7cc1461049a578063e23a9a52146104a2578063e38e8c0f146104c257610253565b80637bdbe4d01161010a5780637bdbe4d014610441578063b58131b014610449578063b71d1a0c14610451578063bb08c32114610464578063d33219b41461047757610253565b806346416f92146103f8578063567813881461040b5780635c60da1b1461041e578063791f5d23146104265780637b3c71d31461042e57610253565b806325fd935a116101d45780633932abb1116101985780633932abb1146103a25780633bccf4fd146103aa5780633e4f49e6146103bd57806340e58ee5146103dd578063452a9320146103f057610253565b806325fd935a146103285780632678224714610330578063328dd9821461034557806334cf39091461036857806335a87de21461038057610253565b80631b9ce5751161021b5780631b9ce575146102db5780631e75adf2146102f05780631ebcfefd1461030557806320606b701461031857806324bc1a641461032057610253565b8063013cf08b1461025857806302a251a31461028b57806306fdde03146102a0578063164a1ab1146102b557806317977c61146102c8575b600080fd5b61026b6102663660046130ed565b610526565b6040516102829b9a99989796959493929190614ad9565b60405180910390f35b610293610592565b604051610282919061468d565b6102a8610598565b6040516102829190614752565b6102936102c3366004612f32565b6105c8565b6102936102d6366004612e68565b610a86565b6102e3610a98565b6040516102829190614736565b6103036102fe36600461302b565b610aa7565b005b6103036103133660046130ed565b610d64565b610293610dd4565b610293610deb565b610293610df9565b610338610e07565b604051610282919061455d565b6103586103533660046130ed565b610e16565b6040516102829493929190614640565b6103706110a5565b6040516102829493929190614bb3565b61039361038e3660046130ed565b6110b4565b60405161028293929190614b8b565b6102936110d5565b6103036103b83660046131dc565b6110db565b6103d06103cb3660046130ed565b6112b3565b6040516102829190614744565b6103036103eb3660046130ed565b61144d565b6103386116e3565b610303610406366004612e8e565b6116f2565b610303610419366004613145565b6118ea565b610338611934565b610293611943565b61030361043c366004613175565b611951565b6102936119a1565b6102936119a7565b61030361045f366004612e68565b6119ad565b6103036104723660046130cf565b611a2a565b6102e3611b01565b610293611b10565b6103036104953660046130ed565b611b16565b610293611daa565b6104b56104b036600461310b565b611db6565b6040516102829190614a13565b6103036104d0366004612e68565b611e23565b610303611edb565b6102e36104eb3660046130ed565b611fb9565b610338611fd4565b610303610506366004612e68565b611fe3565b610293612127565b6103036105213660046130ed565b61212d565b600a60208190526000918252604090912080546001820154600283015460078401546008850154600986015496860154600b870154600c880154600e9098015496986001600160a01b039096169794969395929492939192909160ff808316926101009004811691168b565b60045481565b6040518060400160405280601481526020017356656e757320476f7665726e6f7220427261766f60601b81525081565b6000600654600014156105f65760405162461bcd60e51b81526004016105ed906147d3565b60405180910390fd5b600e600083600281111561060657fe5b60ff1681526020810191909152604001600020600201546009546001600160a01b031663782d6fe13361063a4360016122e0565b6040518363ffffffff1660e01b815260040161065792919061456b565b60206040518083038186803b15801561066f57600080fd5b505afa158015610683573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506106a79190810190613244565b6001600160601b031610156106ce5760405162461bcd60e51b81526004016105ed90614973565b855187511480156106e0575084518751145b80156106ed575083518751145b6107095760405162461bcd60e51b81526004016105ed90614843565b86516107275760405162461bcd60e51b81526004016105ed906148b3565b600c548751111561074a5760405162461bcd60e51b81526004016105ed90614913565b336000908152600b602052604090205480156107c757600061076b826112b3565b9050600181600781111561077b57fe5b14156107995760405162461bcd60e51b81526004016105ed90614953565b60008160078111156107a757fe5b14156107c55760405162461bcd60e51b81526004016105ed90614923565b505b60006107f743600e60008760028111156107dd57fe5b60ff16815260200190815260200160002060000154612308565b9050600061082982600e600088600281111561080f57fe5b60ff16815260200190815260200160002060010154612308565b600780546001019055905061083c6126a2565b604051806101e001604052806007548152602001336001600160a01b03168152602001600081526020018c81526020018b81526020018a81526020018981526020018481526020018381526020016000815260200160008152602001600081526020016000151581526020016000151581526020018760028111156108bd57fe5b60ff16905280516000908152600a602090815260409182902083518155818401516001820180546001600160a01b0319166001600160a01b039092169190911790559183015160028301556060830151805193945084936109249260038501920190612728565b506080820151805161094091600484019160209091019061278d565b5060a0820151805161095c9160058401916020909101906127d4565b5060c0820151805161097891600684019160209091019061282d565b5060e082015160078201556101008083015160088301556101208301516009830155610140830151600a830155610160830151600b80840191909155610180840151600c840180546101a087015160ff199182169315159390931761ff0019169215159094029190911790556101c090930151600e909201805490911660ff90921691909117905581516020808401516001600160a01b0316600090815292905260409091205580517fc8df7ff219f3c0358e14500814d8b62b443a4bebf3a596baa60b9295b1cf1bde90338d8d8d8d89898f8f6002811115610a5757fe5b604051610a6d9a99989796959493929190614a21565b60405180910390a15193505050505b9695505050505050565b600b6020526000908152604090205481565b6009546001600160a01b031681565b6000546001600160a01b03163314610ad15760405162461bcd60e51b81526004016105ed90614833565b60105415801590610ae3575060115415155b8015610af0575060125415155b8015610afd575060135415155b610b195760405162461bcd60e51b81526004016105ed90614783565b805160005b81811015610d5f57601060000154838281518110610b3857fe5b6020026020010151602001511015610b625760405162461bcd60e51b81526004016105ed906147b3565b601060010154838281518110610b7457fe5b6020026020010151602001511115610b9e5760405162461bcd60e51b81526004016105ed90614a03565b601060020154838281518110610bb057fe5b6020026020010151600001511015610bda5760405162461bcd60e51b81526004016105ed906148e3565b601060030154838281518110610bec57fe5b6020026020010151600001511115610c165760405162461bcd60e51b81526004016105ed906148c3565b691fc3842bd1f071c00000838281518110610c2d57fe5b6020026020010151604001511015610c575760405162461bcd60e51b81526004016105ed906149b3565b693f870857a3e0e3800000838281518110610c6e57fe5b6020026020010151604001511115610c985760405162461bcd60e51b81526004016105ed90614763565b828181518110610ca457fe5b6020908102919091018101516000838152600e835260409081902082518155928201516001840155015160029091015582517f99382998f89cd4c8aec7ae5d6deca4b4b0bfa01691740ccd702bf76b6a6816d290849083908110610d0457fe5b602002602001015160200151848381518110610d1c57fe5b602002602001015160000151858481518110610d3457fe5b602002602001015160400151604051610d4f93929190614b8b565b60405180910390a1600101610b1e565b505050565b6000546001600160a01b03163314610d8e5760405162461bcd60e51b81526004016105ed90614933565b600c8054908290556040517fd03b3c3c5c1446bcdd31423061041c94ca3bc5450fe7ccfb0f636f4c420de87e90610dc89083908590614b7d565b60405180910390a15050565b604051610de090614552565b604051809103902081565b697f0e10af47c1c700000081565b693f870857a3e0e380000081565b6001546001600160a01b031681565b6060806060806000600a600087815260200190815260200160002090508060030181600401826005018360060183805480602002602001604051908101604052809291908181526020018280548015610e9857602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311610e7a575b5050505050935082805480602002602001604051908101604052809291908181526020018280548015610eea57602002820191906000526020600020905b815481526020019060010190808311610ed6575b5050505050925081805480602002602001604051908101604052809291908181526020016000905b82821015610fbd5760008481526020908190208301805460408051601f6002600019610100600187161502019094169390930492830185900485028101850190915281815292830182828015610fa95780601f10610f7e57610100808354040283529160200191610fa9565b820191906000526020600020905b815481529060010190602001808311610f8c57829003601f168201915b505050505081526020019060010190610f12565b50505050915080805480602002602001604051908101604052809291908181526020016000905b8282101561108f5760008481526020908190208301805460408051601f600260001961010060018716150201909416939093049283018590048502810185019091528181529283018282801561107b5780601f106110505761010080835404028352916020019161107b565b820191906000526020600020905b81548152906001019060200180831161105e57829003601f168201915b505050505081526020019060010190610fe4565b5050505090509450945094509450509193509193565b60105460115460125460135484565b600e6020526000908152604090208054600182015460029092015490919083565b60035481565b60006040516110e990614552565b60408051918290038220828201909152601482527356656e757320476f7665726e6f7220427261766f60601b6020909201919091527f157d76627a3b71c0167806f5879f7a61d3e301322f3a3b9f900315f15937671a611147612334565b3060405160200161115b949392919061469b565b604051602081830303815290604052805190602001209050600060405161118190614516565b60405190819003812061119a91899089906020016146d9565b604051602081830303815290604052805190602001209050600082826040516020016111c7929190614521565b6040516020818303038152906040528051906020012090506000600182888888604051600081526020016040526040516112049493929190614701565b6020604051602081039080840390855afa158015611226573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b0381166112595760405162461bcd60e51b81526004016105ed90614823565b806001600160a01b03167fb8e138887d0aa13bab447e82de9d5c1777041ecd21ca36ba824ff1e6c07ddda48a8a611291858e8e612339565b6040516112a093929190614c8b565b60405180910390a2505050505050505050565b600081600754101580156112c8575060065482115b6112e45760405162461bcd60e51b81526004016105ed906149a3565b6000828152600a60205260409020600c81015460ff1615611309576002915050611448565b8060070154431161131e576000915050611448565b80600801544311611333576001915050611448565b80600a015481600901541115806113575750697f0e10af47c1c70000008160090154105b15611366576003915050611448565b6002810154611379576004915050611448565b600c810154610100900460ff1615611395576007915050611448565b6002810154600e82015460ff166000908152600f60209081526040918290205482516360d143f160e11b8152925161143294936001600160a01b039092169263c1a287e29260048082019391829003018186803b1580156113f557600080fd5b505afa158015611409573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525061142d919081019061307d565b612308565b4210611442576006915050611448565b60059150505b919050565b6007611458826112b3565b600781111561146357fe5b14156114815760405162461bcd60e51b81526004016105ed90614993565b6000818152600a60205260409020600d546001600160a01b03163314806114b4575060018101546001600160a01b031633145b806115775750600e8181015460ff16600090815260209190915260409020600201546009546001808401546001600160a01b039283169263782d6fe1929116906114ff9043906122e0565b6040518363ffffffff1660e01b815260040161151c9291906145a1565b60206040518083038186803b15801561153457600080fd5b505afa158015611548573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525061156c9190810190613244565b6001600160601b0316105b6115935760405162461bcd60e51b81526004016105ed906148f3565b600c8101805460ff1916600117905560005b60038201548110156116b357600e82015460ff166000908152600f60205260409020546003830180546001600160a01b039092169163591fcdfe9190849081106115eb57fe5b6000918252602090912001546004850180546001600160a01b03909216918590811061161357fe5b906000526020600020015485600501858154811061162d57fe5b9060005260206000200186600601868154811061164657fe5b9060005260206000200187600201546040518663ffffffff1660e01b81526004016116759594939291906145ff565b600060405180830381600087803b15801561168f57600080fd5b505af11580156116a3573d6000803e3d6000fd5b5050600190920191506115a59050565b507f789cf55be980739dad1d0699b93b58e806b51c9d96619bfa8fe0a28abaa7b30c82604051610dc8919061468d565b600d546001600160a01b031681565b60008052600f6020527ff4803e074bd026baaf6ed2e288c9515f68c72fb7216eebdd7cae1718a53ec375546001600160a01b0316156117435760405162461bcd60e51b81526004016105ed90614863565b6000546001600160a01b0316331461176d5760405162461bcd60e51b81526004016105ed90614853565b6001600160a01b0385166117935760405162461bcd60e51b81526004016105ed90614803565b6001600160a01b0381166117b95760405162461bcd60e51b81526004016105ed90614903565b81516003146117da5760405162461bcd60e51b81526004016105ed906147c3565b82516003146117fb5760405162461bcd60e51b81526004016105ed906149c3565b600980546001600160a01b038088166001600160a01b031992831617909255600a600c55600d80549284169290911691909117905561183984611a2a565b61184283610aa7565b815160005b818110156118e15760006001600160a01b031684828151811061186657fe5b60200260200101516001600160a01b031614156118955760405162461bcd60e51b81526004016105ed90614943565b8381815181106118a157fe5b6020908102919091018101516000838152600f909252604090912080546001600160a01b0319166001600160a01b03909216919091179055600101611847565b50505050505050565b337fb8e138887d0aa13bab447e82de9d5c1777041ecd21ca36ba824ff1e6c07ddda48383611919848383612339565b60405161192893929190614c8b565b60405180910390a25050565b6002546001600160a01b031681565b691fc3842bd1f071c0000081565b337fb8e138887d0aa13bab447e82de9d5c1777041ecd21ca36ba824ff1e6c07ddda48585611980848383612339565b8686604051611993959493929190614c45565b60405180910390a250505050565b600c5481565b60055481565b6000546001600160a01b031633146119d75760405162461bcd60e51b81526004016105ed90614793565b600180546001600160a01b038381166001600160a01b03198316179092556040519116907fca4f2f25d0898edd99413412fb94012f9e54ec8142f9b093e7720646a95b16a990610dc89083908590614586565b6000546001600160a01b03163314611a545760405162461bcd60e51b81526004016105ed90614893565b805115801590611a68575060008160400151115b611a845760405162461bcd60e51b81526004016105ed90614983565b60105481516011546020840151601254604080870151601354606089015192517fc90c7ad68c13a491443f1c63dafa18b365428ee69170415afe234c16dc6f650d98611adb98909790969095909490939291614bce565b60405180910390a180516010556020810151601155604081015160125560600151601355565b6008546001600160a01b031681565b60075481565b6004611b21826112b3565b6007811115611b2c57fe5b14611b495760405162461bcd60e51b81526004016105ed90614873565b6000818152600a60209081526040808320600e81015460ff168452600f8352818420548251630d48571f60e31b81529251919493611bb29342936001600160a01b0390931692636a42b8f892600480840193919291829003018186803b1580156113f557600080fd5b905060005b6003830154811015611d6357611d5b836003018281548110611bd557fe5b6000918252602090912001546004850180546001600160a01b039092169184908110611bfd57fe5b9060005260206000200154856005018481548110611c1757fe5b600091825260209182902001805460408051601f6002600019610100600187161502019094169390930492830185900485028101850190915281815292830182828015611ca55780601f10611c7a57610100808354040283529160200191611ca5565b820191906000526020600020905b815481529060010190602001808311611c8857829003601f168201915b5050505050866006018581548110611cb957fe5b600091825260209182902001805460408051601f6002600019610100600187161502019094169390930492830185900485028101850190915281815292830182828015611d475780601f10611d1c57610100808354040283529160200191611d47565b820191906000526020600020905b815481529060010190602001808311611d2a57829003601f168201915b50505050600e89015488915060ff16612529565b600101611bb7565b50600282018190556040517f9a2e42fd6722813d69113e7d0079d3d940171428df7373df9c7f7617cfda289290611d9d9085908490614b7d565b60405180910390a1505050565b604051610de090614516565b611dbe612886565b506000828152600a602090815260408083206001600160a01b0385168452600d018252918290208251606081018452905460ff8082161515835261010082041692820192909252620100009091046001600160601b0316918101919091525b92915050565b600d546001600160a01b0316331480611e4657506000546001600160a01b031633145b611e625760405162461bcd60e51b81526004016105ed906149e3565b6001600160a01b038116611e885760405162461bcd60e51b81526004016105ed906149d3565b600d80546001600160a01b038381166001600160a01b03198316179092556040519116907f08fdaf06427a2010e5958f4329b566993472d14ce81d3f16ce7f2a2660da98e390610dc89083908590614586565b6001546001600160a01b031633148015611ef457503315155b611f105760405162461bcd60e51b81526004016105ed906148d3565b60008054600180546001600160a01b038082166001600160a01b03198086168217968790559092169092556040519282169390927ff9ffabca9c8276e99321725bcb43fb076a6c66a54b7f21c4e8146d8519b417dc92611f74928692911690614586565b60405180910390a16001546040517fca4f2f25d0898edd99413412fb94012f9e54ec8142f9b093e7720646a95b16a991610dc89184916001600160a01b031690614586565b600f602052600090815260409020546001600160a01b031681565b6000546001600160a01b031681565b6000546001600160a01b0316331461200d5760405162461bcd60e51b81526004016105ed90614963565b6006541561202d5760405162461bcd60e51b81526004016105ed906148a3565b806001600160a01b031663da35c6646040518163ffffffff1660e01b8152600401602060405180830381600087803b15801561206857600080fd5b505af115801561207c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506120a0919081019061307d565b600781905560065560005b6003811015612123576000818152600f6020526040808220548151630e18b68160e01b815291516001600160a01b0390911692630e18b681926004808201939182900301818387803b15801561210057600080fd5b505af1158015612114573d6000803e3d6000fd5b505050508060010190506120ab565b5050565b60065481565b6005612138826112b3565b600781111561214357fe5b146121605760405162461bcd60e51b81526004016105ed90614813565b6000818152600a60205260408120600c8101805461ff001916610100179055905b60038201548110156122b057600e82015460ff166000908152600f60205260409020546003830180546001600160a01b0390921691630825f38f9190849081106121c757fe5b6000918252602090912001546004850180546001600160a01b0390921691859081106121ef57fe5b906000526020600020015485600501858154811061220957fe5b9060005260206000200186600601868154811061222257fe5b9060005260206000200187600201546040518663ffffffff1660e01b81526004016122519594939291906145ff565b600060405180830381600087803b15801561226b57600080fd5b505af115801561227f573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526122a7919081019061309b565b50600101612181565b507f712ae1383f79ac853f8d882153778e0260ef8f03b504e2866e0593e04d2b291f82604051610dc8919061468d565b6000828211156123025760405162461bcd60e51b81526004016105ed906149f3565b50900390565b60008282018381101561232d5760405162461bcd60e51b81526004016105ed90614883565b9392505050565b465b90565b60006001612346846112b3565b600781111561235157fe5b1461236e5760405162461bcd60e51b81526004016105ed906147e3565b60028260ff1611156123925760405162461bcd60e51b81526004016105ed90614773565b6000838152600a602090815260408083206001600160a01b0388168452600d8101909252909120805460ff16156123db5760405162461bcd60e51b81526004016105ed906147f3565b600954600783015460405163782d6fe160e01b81526000926001600160a01b03169163782d6fe191612411918b916004016145a1565b60206040518083038186803b15801561242957600080fd5b505afa15801561243d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506124619190810190613244565b905060ff851661248c5761248283600a0154826001600160601b0316612308565b600a8401556124e2565b8460ff16600114156124b9576124af8360090154826001600160601b0316612308565b60098401556124e2565b8460ff16600214156124e2576124dc83600b0154826001600160601b0316612308565b600b8401555b8154600160ff199091161761ff00191661010060ff871602176dffffffffffffffffffffffff00001916620100006001600160601b03831602179091559150509392505050565b60ff81166000908152600f60209081526040918290205491516001600160a01b039092169163f2b0653791612568918a918a918a918a918a91016145af565b604051602081830303815290604052805190602001206040518263ffffffff1660e01b815260040161259a919061468d565b60206040518083038186803b1580156125b257600080fd5b505afa1580156125c6573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506125ea919081019061305f565b156126075760405162461bcd60e51b81526004016105ed906147a3565b60ff81166000908152600f602052604090819020549051633a66f90160e01b81526001600160a01b0390911690633a66f9019061265090899089908990899089906004016145af565b602060405180830381600087803b15801561266a57600080fd5b505af115801561267e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506118e1919081019061307d565b604051806101e001604052806000815260200160006001600160a01b0316815260200160008152602001606081526020016060815260200160608152602001606081526020016000815260200160008152602001600081526020016000815260200160008152602001600015158152602001600015158152602001600060ff1681525090565b82805482825590600052602060002090810192821561277d579160200282015b8281111561277d57825182546001600160a01b0319166001600160a01b03909116178255602090920191600190910190612748565b506127899291506128a6565b5090565b8280548282559060005260206000209081019282156127c8579160200282015b828111156127c85782518255916020019190600101906127ad565b506127899291506128ca565b828054828255906000526020600020908101928215612821579160200282015b8281111561282157825180516128119184916020909101906128e4565b50916020019190600101906127f4565b50612789929150612951565b82805482825590600052602060002090810192821561287a579160200282015b8281111561287a578251805161286a9184916020909101906128e4565b509160200191906001019061284d565b50612789929150612974565b604080516060810182526000808252602082018190529181019190915290565b61233691905b808211156127895780546001600160a01b03191681556001016128ac565b61233691905b8082111561278957600081556001016128d0565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061292557805160ff19168380011785556127c8565b828001600101855582156127c857918201828111156127c85782518255916020019190600101906127ad565b61233691905b8082111561278957600061296b8282612997565b50600101612957565b61233691905b8082111561278957600061298e8282612997565b5060010161297a565b50805460018160011615610100020316600290046000825580601f106129bd57506129db565b601f0160209004906000526020600020908101906129db91906128ca565b50565b8035611e1d81614e00565b600082601f8301126129fa57600080fd5b8135612a0d612a0882614cea565b614cc4565b91508181835260208401935060208101905083856020840282011115612a3257600080fd5b60005b83811015612a5e5781612a4888826129de565b8452506020928301929190910190600101612a35565b5050505092915050565b600082601f830112612a7957600080fd5b8135612a87612a0882614cea565b81815260209384019390925082018360005b83811015612a5e5781358601612aaf8882612c95565b8452506020928301929190910190600101612a99565b600082601f830112612ad657600080fd5b8135612ae4612a0882614cea565b91508181835260208401935060208101905083856020840282011115612b0957600080fd5b60005b83811015612a5e5781612b1f8882612d2a565b8452506020928301929190910190600101612b0c565b600082601f830112612b4657600080fd5b8135612b54612a0882614cea565b81815260209384019390925082018360005b83811015612a5e5781358601612b7c8882612c95565b8452506020928301929190910190600101612b66565b600082601f830112612ba357600080fd5b8135612bb1612a0882614cea565b91508181835260208401935060208101905083856060840282011115612bd657600080fd5b60005b83811015612a5e5781612bec8882612d88565b84525060209092019160609190910190600101612bd9565b600082601f830112612c1557600080fd5b8135612c23612a0882614cea565b91508181835260208401935060208101905083856020840282011115612c4857600080fd5b60005b83811015612a5e5781612c5e8882612c7f565b8452506020928301929190910190600101612c4b565b8051611e1d81614e14565b8035611e1d81614e1d565b8051611e1d81614e1d565b600082601f830112612ca657600080fd5b8135612cb4612a0882614d0a565b91508082526020830160208301858383011115612cd057600080fd5b612cdb838284614db4565b50505092915050565b600082601f830112612cf557600080fd5b8151612d03612a0882614d0a565b91508082526020830160208301858383011115612d1f57600080fd5b612cdb838284614dc0565b8035611e1d81614e26565b8035611e1d81614e2f565b60008083601f840112612d5257600080fd5b5081356001600160401b03811115612d6957600080fd5b602083019150836001820283011115612d8157600080fd5b9250929050565b600060608284031215612d9a57600080fd5b612da46060614cc4565b90506000612db28484612c7f565b8252506020612dc384848301612c7f565b6020830152506040612dd784828501612c7f565b60408301525092915050565b600060808284031215612df557600080fd5b612dff6080614cc4565b90506000612e0d8484612c7f565b8252506020612e1e84848301612c7f565b6020830152506040612e3284828501612c7f565b6040830152506060612e4684828501612c7f565b60608301525092915050565b8035611e1d81614e3c565b8051611e1d81614e45565b600060208284031215612e7a57600080fd5b6000612e8684846129de565b949350505050565b60008060008060006101008688031215612ea757600080fd5b6000612eb388886129de565b9550506020612ec488828901612de3565b94505060a08601356001600160401b03811115612ee057600080fd5b612eec88828901612b92565b93505060c08601356001600160401b03811115612f0857600080fd5b612f1488828901612ac5565b92505060e0612f25888289016129de565b9150509295509295909350565b60008060008060008060c08789031215612f4b57600080fd5b86356001600160401b03811115612f6157600080fd5b612f6d89828a016129e9565b96505060208701356001600160401b03811115612f8957600080fd5b612f9589828a01612c04565b95505060408701356001600160401b03811115612fb157600080fd5b612fbd89828a01612b35565b94505060608701356001600160401b03811115612fd957600080fd5b612fe589828a01612a68565b93505060808701356001600160401b0381111561300157600080fd5b61300d89828a01612c95565b92505060a061301e89828a01612d35565b9150509295509295509295565b60006020828403121561303d57600080fd5b81356001600160401b0381111561305357600080fd5b612e8684828501612b92565b60006020828403121561307157600080fd5b6000612e868484612c74565b60006020828403121561308f57600080fd5b6000612e868484612c8a565b6000602082840312156130ad57600080fd5b81516001600160401b038111156130c357600080fd5b612e8684828501612ce4565b6000608082840312156130e157600080fd5b6000612e868484612de3565b6000602082840312156130ff57600080fd5b6000612e868484612c7f565b6000806040838503121561311e57600080fd5b600061312a8585612c7f565b925050602061313b858286016129de565b9150509250929050565b6000806040838503121561315857600080fd5b60006131648585612c7f565b925050602061313b85828601612e52565b6000806000806060858703121561318b57600080fd5b60006131978787612c7f565b94505060206131a887828801612e52565b93505060408501356001600160401b038111156131c457600080fd5b6131d087828801612d40565b95989497509550505050565b600080600080600060a086880312156131f457600080fd5b60006132008888612c7f565b955050602061321188828901612e52565b945050604061322288828901612e52565b935050606061323388828901612c7f565b9250506080612f2588828901612c7f565b60006020828403121561325657600080fd5b6000612e868484612e5d565b600061326e838361329d565b505060200190565b600061232d838361343f565b600061326e8383613425565b61329781614d93565b82525050565b61329781614d50565b60006132b182614d43565b6132bb8185614d47565b93506132c683614d31565b8060005b838110156132f45781516132de8882613262565b97506132e983614d31565b9250506001016132ca565b509495945050505050565b600061330a82614d43565b6133148185614d47565b93508360208202850161332685614d31565b8060005b8581101561336057848403895281516133438582613276565b945061334e83614d31565b60209a909a019992505060010161332a565b5091979650505050505050565b600061337882614d43565b6133828185614d47565b93508360208202850161339485614d31565b8060005b8581101561336057848403895281516133b18582613276565b94506133bc83614d31565b60209a909a0199925050600101613398565b60006133d982614d43565b6133e38185614d47565b93506133ee83614d31565b8060005b838110156132f45781516134068882613282565b975061341183614d31565b9250506001016133f2565b61329781614d5b565b61329781612336565b61329761343a82612336565b612336565b600061344a82614d43565b6134548185614d47565b9350613464818560208601614dc0565b61346d81614dec565b9093019392505050565b60008154600181166000811461349457600181146134ba576134f9565b607f60028304166134a58187614d47565b60ff19841681529550506020850192506134f9565b600282046134c88187614d47565b95506134d385614d37565b60005b828110156134f2578154888201526001909101906020016134d6565b8701945050505b505092915050565b61329781614d60565b61329781614d9e565b600061351f8385614d47565b935061352c838584614db4565b61346d83614dec565b6000613542604183614d47565b600080516020614e4f83398151915281527f733a20696e76616c6964206d61782070726f706f73616c207468726573686f6c6020820152601960fa1b604082015260600192915050565b6000613599603283614d47565b7f476f7665726e6f72427261766f3a3a63617374566f7465496e7465726e616c3a81527120696e76616c696420766f7465207479706560701b602082015260400192915050565b60006135ed604783614d47565b600080516020614e4f83398151915281527f733a2076616c69646174696f6e20706172616d73206e6f7420636f6e666967756020820152661c9959081e595d60ca1b604082015260600192915050565b600061364a602883611448565b7f42616c6c6f742875696e743235362070726f706f73616c49642c75696e743820815267737570706f72742960c01b602082015260280192915050565b6000613694602a83614d47565b7f476f7665726e6f72427261766f3a5f73657450656e64696e6741646d696e3a2081526961646d696e206f6e6c7960b01b602082015260400192915050565b60006136e0605583614d47565b7f476f7665726e6f72427261766f3a3a71756575654f72526576657274496e746581527f726e616c3a206964656e746963616c2070726f706f73616c20616374696f6e20602082015274616c7265616479207175657565642061742065746160581b604082015260600192915050565b600061375d603c83614d47565b600080516020614e4f83398151915281527f733a20696e76616c6964206d696e20766f74696e6720706572696f6400000000602082015260400192915050565b60006137aa605683614d47565b7f476f7665726e6f72427261766f3a3a696e697469616c697a653a6e756d62657281527f206f662074696d656c6f636b732073686f756c64206d61746368206e756d626560208201527572206f6620676f7665726e616e636520726f7574657360501b604082015260600192915050565b6000613828603183614d47565b7f476f7665726e6f72427261766f3a3a70726f706f73653a20476f7665726e6f7281527020427261766f206e6f742061637469766560781b602082015260400192915050565b600061387b600283611448565b61190160f01b815260020192915050565b6000613899603183614d47565b7f476f7665726e6f72427261766f3a3a63617374566f7465496e7465726e616c3a815270081d9bdd1a5b99c81a5cc818db1bdcd959607a1b602082015260400192915050565b60006138ec603483614d47565b7f476f7665726e6f72427261766f3a3a63617374566f7465496e7465726e616c3a815273081d9bdd195c88185b1c9958591e481d9bdd195960621b602082015260400192915050565b6000613942603483614d47565b7f476f7665726e6f72427261766f3a3a696e697469616c697a653a20696e76616c815273696420787673207661756c74206164647265737360601b602082015260400192915050565b6000613998604583614d47565b7f476f7665726e6f72427261766f3a3a657865637574653a2070726f706f73616c81527f2063616e206f6e6c7920626520657865637574656420696620697420697320716020820152641d595d595960da1b604082015260600192915050565b6000613a05602f83614d47565b7f476f7665726e6f72427261766f3a3a63617374566f746542795369673a20696e81526e76616c6964207369676e617475726560881b602082015260400192915050565b6000613a56602d83614d47565b600080516020614e4f83398151915281526c733a2061646d696e206f6e6c7960981b602082015260400192915050565b6000613a93604483614d47565b7f476f7665726e6f72427261766f3a3a70726f706f73653a2070726f706f73616c81527f2066756e6374696f6e20696e666f726d6174696f6e206172697479206d69736d6020820152630c2e8c6d60e31b604082015260600192915050565b6000613aff602583614d47565b7f476f7665726e6f72427261766f3a3a696e697469616c697a653a2061646d696e815264206f6e6c7960d81b602082015260400192915050565b6000613b46603283614d47565b7f476f7665726e6f72427261766f3a3a696e697469616c697a653a2063616e6e6f8152717420696e697469616c697a6520747769636560701b602082015260400192915050565b6000613b9a604483614d47565b7f476f7665726e6f72427261766f3a3a71756575653a2070726f706f73616c206381527f616e206f6e6c79206265207175657565642069662069742069732073756363656020820152631959195960e21b604082015260600192915050565b6000613c06601183614d47565b706164646974696f6e206f766572666c6f7760781b815260200192915050565b6000613c33604383611448565b7f454950373132446f6d61696e28737472696e67206e616d652c75696e7432353681527f20636861696e49642c6164647265737320766572696679696e67436f6e74726160208201526263742960e81b604082015260430192915050565b6000613c9e602e83614d47565b7f476f7665726e6f72427261766f3a3a73657456616c69646174696f6e5061726181526d6d733a2061646d696e206f6e6c7960901b602082015260400192915050565b6000613cee603083614d47565b7f476f7665726e6f72427261766f3a3a5f696e6974696174653a2063616e206f6e81526f6c7920696e697469617465206f6e636560801b602082015260400192915050565b6000613d40602c83614d47565b7f476f7665726e6f72427261766f3a3a70726f706f73653a206d7573742070726f81526b7669646520616374696f6e7360a01b602082015260400192915050565b6000613d8e603b83614d47565b600080516020614e4f83398151915281527f733a20696e76616c6964206d617820766f74696e672064656c61790000000000602082015260400192915050565b6000613ddb602e83614d47565b7f476f7665726e6f72427261766f3a5f61636365707441646d696e3a2070656e6481526d696e672061646d696e206f6e6c7960901b602082015260400192915050565b6000613e2b603b83614d47565b600080516020614e4f83398151915281527f733a20696e76616c6964206d696e20766f74696e672064656c61790000000000602082015260400192915050565b6000613e78602f83614d47565b7f476f7665726e6f72427261766f3a3a63616e63656c3a2070726f706f7365722081526e18589bdd99481d1a1c995cda1bdb19608a1b602082015260400192915050565b6000613ec9602b83614d47565b7f476f7665726e6f72427261766f3a3a696e697469616c697a653a20696e76616c81526a34b21033bab0b93234b0b760a91b602082015260400192915050565b6000613f16602883614d47565b7f476f7665726e6f72427261766f3a3a70726f706f73653a20746f6f206d616e7981526720616374696f6e7360c01b602082015260400192915050565b6000613f60605983614d47565b7f476f7665726e6f72427261766f3a3a70726f706f73653a206f6e65206c69766581527f2070726f706f73616c207065722070726f706f7365722c20666f756e6420616e60208201527f20616c72656164792070656e64696e672070726f706f73616c00000000000000604082015260600192915050565b6000613fe5603483614d47565b7f476f7665726e6f72427261766f3a3a5f73657450726f706f73616c4d61784f7081527365726174696f6e733a2061646d696e206f6e6c7960601b602082015260400192915050565b600061403b603283614d47565b7f476f7665726e6f72427261766f3a3a696e697469616c697a653a696e76616c69815271642074696d656c6f636b206164647265737360701b602082015260400192915050565b600061408f605883614d47565b7f476f7665726e6f72427261766f3a3a70726f706f73653a206f6e65206c69766581527f2070726f706f73616c207065722070726f706f7365722c20666f756e6420616e60208201527f20616c7265616479206163746976652070726f706f73616c0000000000000000604082015260600192915050565b6000611e1d600083614d47565b6000614121602483614d47565b7f476f7665726e6f72427261766f3a3a5f696e6974696174653a2061646d696e208152636f6e6c7960e01b602082015260400192915050565b6000614167603f83614d47565b7f476f7665726e6f72427261766f3a3a70726f706f73653a2070726f706f73657281527f20766f7465732062656c6f772070726f706f73616c207468726573686f6c6400602082015260400192915050565b60006141c6603283614d47565b7f476f7665726e6f72427261766f3a3a73657456616c69646174696f6e506172618152716d733a20696e76616c696420706172616d7360701b602082015260400192915050565b600061421a603683614d47565b7f476f7665726e6f72427261766f3a3a63616e63656c3a2063616e6e6f742063618152751b98d95b08195e1958dd5d1959081c1c9bdc1bdcd85b60521b602082015260400192915050565b6000614272602983614d47565b7f476f7665726e6f72427261766f3a3a73746174653a20696e76616c69642070728152681bdc1bdcd85b081a5960ba1b602082015260400192915050565b60006142bd604183614d47565b600080516020614e4f83398151915281527f733a20696e76616c6964206d696e2070726f706f73616c207468726573686f6c6020820152601960fa1b604082015260600192915050565b6000614314605d83614d47565b7f476f7665726e6f72427261766f3a3a696e697469616c697a653a6e756d62657281527f206f662070726f706f73616c20636f6e666967732073686f756c64206d61746360208201527f68206e756d626572206f6620676f7665726e616e636520726f75746573000000604082015260600192915050565b6000614399603b83614d47565b7f476f7665726e6f72427261766f3a3a5f736574477561726469616e3a2063616e81527f6e6f74206c69766520776974686f7574206120677561726469616e0000000000602082015260400192915050565b60006143f8603383614d47565b7f476f7665726e6f72427261766f3a3a5f736574477561726469616e3a2061646d815272696e206f7220677561726469616e206f6e6c7960681b602082015260400192915050565b600061444d601583614d47565b747375627472616374696f6e20756e646572666c6f7760581b815260200192915050565b600061447e603c83614d47565b600080516020614e4f83398151915281527f733a20696e76616c6964206d617820766f74696e6720706572696f6400000000602082015260400192915050565b805160608301906144cf848261341c565b5060208201516144e260208501826144fb565b5060408201516144f5604085018261450d565b50505050565b61329781614d81565b61329781614da9565b61329781614d87565b6000611e1d8261363d565b600061452c8261386e565b9150614538828561342e565b602082019150614548828461342e565b5060200192915050565b6000611e1d82613c26565b60208101611e1d828461329d565b60408101614579828561328e565b61232d6020830184613425565b60408101614594828561329d565b61232d602083018461329d565b60408101614579828561329d565b60a081016145bd828861329d565b6145ca6020830187613425565b81810360408301526145dc818661343f565b905081810360608301526145f0818561343f565b9050610a7c6080830184613425565b60a0810161460d828861329d565b61461a6020830187613425565b818103604083015261462c8186613477565b905081810360608301526145f08185613477565b6080808252810161465181876132a6565b9050818103602083015261466581866133ce565b90508181036040830152614679818561336d565b90508181036060830152610a7c81846132ff565b60208101611e1d8284613425565b608081016146a98287613425565b6146b66020830186613425565b6146c36040830185613425565b6146d0606083018461329d565b95945050505050565b606081016146e78286613425565b6146f46020830185613425565b612e8660408301846144fb565b6080810161470f8287613425565b61471c60208301866144fb565b6147296040830185613425565b6146d06060830184613425565b60208101611e1d8284613501565b60208101611e1d828461350a565b6020808252810161232d818461343f565b60208082528101611e1d81613535565b60208082528101611e1d8161358c565b60208082528101611e1d816135e0565b60208082528101611e1d81613687565b60208082528101611e1d816136d3565b60208082528101611e1d81613750565b60208082528101611e1d8161379d565b60208082528101611e1d8161381b565b60208082528101611e1d8161388c565b60208082528101611e1d816138df565b60208082528101611e1d81613935565b60208082528101611e1d8161398b565b60208082528101611e1d816139f8565b60208082528101611e1d81613a49565b60208082528101611e1d81613a86565b60208082528101611e1d81613af2565b60208082528101611e1d81613b39565b60208082528101611e1d81613b8d565b60208082528101611e1d81613bf9565b60208082528101611e1d81613c91565b60208082528101611e1d81613ce1565b60208082528101611e1d81613d33565b60208082528101611e1d81613d81565b60208082528101611e1d81613dce565b60208082528101611e1d81613e1e565b60208082528101611e1d81613e6b565b60208082528101611e1d81613ebc565b60208082528101611e1d81613f09565b60208082528101611e1d81613f53565b60208082528101611e1d81613fd8565b60208082528101611e1d8161402e565b60208082528101611e1d81614082565b60208082528101611e1d81614114565b60208082528101611e1d8161415a565b60208082528101611e1d816141b9565b60208082528101611e1d8161420d565b60208082528101611e1d81614265565b60208082528101611e1d816142b0565b60208082528101611e1d81614307565b60208082528101611e1d8161438c565b60208082528101611e1d816143eb565b60208082528101611e1d81614440565b60208082528101611e1d81614471565b60608101611e1d82846144be565b6101408101614a30828d613425565b614a3d602083018c61328e565b8181036040830152614a4f818b6132a6565b90508181036060830152614a63818a6133ce565b90508181036080830152614a77818961336d565b905081810360a0830152614a8b81886132ff565b9050614a9a60c0830187613425565b614aa760e0830186613425565b818103610100830152614aba818561343f565b9050614aca6101208301846144fb565b9b9a5050505050505050505050565b6101608101614ae8828e613425565b614af5602083018d61329d565b614b02604083018c613425565b614b0f606083018b613425565b614b1c608083018a613425565b614b2960a0830189613425565b614b3660c0830188613425565b614b4360e0830187613425565b614b5161010083018661341c565b614b5f61012083018561341c565b614b6d6101408301846144fb565b9c9b505050505050505050505050565b604081016145798285613425565b60608101614b998286613425565b614ba66020830185613425565b612e866040830184613425565b60808101614bc18287613425565b61471c6020830186613425565b6101008101614bdd828b613425565b614bea602083018a613425565b614bf76040830189613425565b614c046060830188613425565b614c116080830187613425565b614c1e60a0830186613425565b614c2b60c0830185613425565b614c3860e0830184613425565b9998505050505050505050565b60808101614c538288613425565b614c6060208301876144fb565b614c6d6040830186614504565b8181036060830152614c80818486613513565b979650505050505050565b60808101614c998286613425565b614ca660208301856144fb565b614cb36040830184614504565b81810360608301526146d081614107565b6040518181016001600160401b0381118282101715614ce257600080fd5b604052919050565b60006001600160401b03821115614d0057600080fd5b5060209081020190565b60006001600160401b03821115614d2057600080fd5b506020601f91909101601f19160190565b60200190565b60009081526020902090565b5190565b90815260200190565b6000611e1d82614d75565b151590565b6000611e1d82614d50565b8061144881614df6565b6001600160a01b031690565b60ff1690565b6001600160601b031690565b6000611e1d82614d60565b6000611e1d82614d6b565b6000611e1d82614d87565b82818337506000910152565b60005b83811015614ddb578181015183820152602001614dc3565b838111156144f55750506000910152565b601f01601f191690565b600881106129db57fe5b614e0981614d50565b81146129db57600080fd5b614e0981614d5b565b614e0981612336565b614e0981614d60565b600381106129db57600080fd5b614e0981614d81565b614e0981614d8756fe476f7665726e6f72427261766f3a3a73657450726f706f73616c436f6e666967a365627a7a72315820153c868bd253a9ccdfd2ca40beb175c4665d08e5592612393ff84fd07a0b83686c6578706572696d656e74616cf564736f6c63430005100040",
  "deployedBytecode": "",
  "devdoc": {
    "methods": {
      "_acceptAdmin()": {
        "details": "Admin function for pending admin to accept role and update admin"
      },
      "_initiate(address)": {
        "details": "Admin only. Sets initial proposal id which initiates the contract, ensuring a continuous proposal id count",
        "params": {
          "governorAlpha": "The address for the Governor to continue the proposal id count from"
        }
      },
      "_setGuardian(address)": {
        "params": {
          "newGuardian": "the address of the new guardian"
        }
      },
      "_setPendingAdmin(address)": {
        "details": "Admin function to begin change of admin. The newPendingAdmin must call `_acceptAdmin` to finalize the transfer.",
        "params": {
          "newPendingAdmin": "New pending admin."
        }
      },
      "_setProposalMaxOperations(uint256)": {
        "details": "Admin only.",
        "params": {
          "proposalMaxOperations_": "Max proposal operations"
        }
      },
      "cancel(uint256)": {
        "params": {
          "proposalId": "The id of the proposal to cancel"
        }
      },
      "castVote(uint256,uint8)": {
        "params": {
          "proposalId": "The id of the proposal to vote on",
          "support": "The support value for the vote. 0=against, 1=for, 2=abstain"
        }
      },
      "castVoteBySig(uint256,uint8,uint8,bytes32,bytes32)": {
        "details": "External function that accepts EIP-712 signatures for voting on proposals.",
        "params": {
          "proposalId": "The id of the proposal to vote on",
          "r": "part of the ECDSA sig output",
          "s": "part of the ECDSA sig output",
          "support": "The support value for the vote. 0=against, 1=for, 2=abstain",
          "v": "recovery id of ECDSA signature"
        }
      },
      "castVoteWithReason(uint256,uint8,string)": {
        "params": {
          "proposalId": "The id of the proposal to vote on",
          "reason": "The reason given for the vote by the voter",
          "support": "The support value for the vote. 0=against, 1=for, 2=abstain"
        }
      },
      "execute(uint256)": {
        "params": {
          "proposalId": "The id of the proposal to execute"
        }
      },
      "getActions(uint256)": {
        "params": {
          "proposalId": "the id of the proposal"
        },
        "return": "targets, values, signatures, and calldatas of the proposal actions"
      },
      "getReceipt(uint256,address)": {
        "params": {
          "proposalId": "the id of proposal",
          "voter": "The address of the voter"
        },
        "return": "The voting receipt"
      },
      "initialize(address,(uint256,uint256,uint256,uint256),(uint256,uint256,uint256)[],address[],address)": {
        "params": {
          "proposalConfigs_": "Governance configs for each governance route",
          "timelocks": "Timelock addresses for each governance route",
          "xvsVault_": "The address of the XvsVault"
        }
      },
      "propose(address[],uint256[],string[],bytes[],string,uint8)": {
        "details": "NOTE: Proposals with duplicate set of actions can not be queued for execution. If the proposals consists of duplicate actions, it's recommended to split those actions into separate proposals",
        "params": {
          "calldatas": "Calldatas for proposal calls",
          "description": "String description of the proposal",
          "proposalType": "the type of the proposal (e.g NORMAL, FASTTRACK, CRITICAL)",
          "signatures": "Function signatures for proposal calls",
          "targets": "Target addresses for proposal calls",
          "values": "BNB values for proposal calls"
        },
        "return": "Proposal id of new proposal"
      },
      "queue(uint256)": {
        "params": {
          "proposalId": "The id of the proposal to queue"
        }
      },
      "state(uint256)": {
        "params": {
          "proposalId": "The id of the proposal"
        },
        "return": "Proposal state"
      }
    },
    "title": "GovernorBravoDelegate"
  },
  "userdoc": {
    "methods": {
      "_acceptAdmin()": {
        "notice": "Accepts transfer of admin rights. msg.sender must be pendingAdmin"
      },
      "_initiate(address)": {
        "notice": "Initiate the GovernorBravo contract"
      },
      "_setGuardian(address)": {
        "notice": "Sets the new governance guardian"
      },
      "_setPendingAdmin(address)": {
        "notice": "Begins transfer of admin rights. The newPendingAdmin must call `_acceptAdmin` to finalize the transfer."
      },
      "_setProposalMaxOperations(uint256)": {
        "notice": "Set max proposal operations"
      },
      "cancel(uint256)": {
        "notice": "Cancels a proposal only if sender is the proposer, or proposer delegates dropped below proposal threshold"
      },
      "castVote(uint256,uint8)": {
        "notice": "Cast a vote for a proposal"
      },
      "castVoteBySig(uint256,uint8,uint8,bytes32,bytes32)": {
        "notice": "Cast a vote for a proposal by signature"
      },
      "castVoteWithReason(uint256,uint8,string)": {
        "notice": "Cast a vote for a proposal with a reason"
      },
      "execute(uint256)": {
        "notice": "Executes a queued proposal if eta has passed"
      },
      "getActions(uint256)": {
        "notice": "Gets actions of a proposal"
      },
      "getReceipt(uint256,address)": {
        "notice": "Gets the receipt for a voter on a given proposal"
      },
      "initialize(address,(uint256,uint256,uint256,uint256),(uint256,uint256,uint256)[],address[],address)": {
        "notice": "Used to initialize the contract during delegator contructor"
      },
      "propose(address[],uint256[],string[],bytes[],string,uint8)": {
        "notice": "Function used to propose a new proposal. Sender must have delegates above the proposal threshold. targets, values, signatures, and calldatas must be of equal length"
      },
      "queue(uint256)": {
        "notice": "Queues a proposal of state succeeded"
      },
      "setProposalConfigs((uint256,uint256,uint256)[])": {
        "notice": "Sets the configuration for different proposal types** @dev Requires validationParams to be configured before** @param proposalConfigs_ Array of proposal configuration structs to update"
      },
      "setValidationParams((uint256,uint256,uint256,uint256))": {
        "notice": "Sets the validation parameters for voting delay and voting period** @param newValidationParams Struct containing new minimum and maximum voting period and delay"
      },
      "state(uint256)": {
        "notice": "Gets the state of a proposal"
      }
    },
    "notice": "Venus Governance latest on chain governance includes several new features including variable proposal routes and fine grained pause control. Variable routes for proposals allows for governance paramaters such as voting threshold and timelocks to be customized based on the risk level and impact of the proposal. Added granularity to the pause control mechanism allows governance to pause individual actions on specific markets, which reduces impact on the protocol as a whole. This is particularly useful when applied to isolated pools. * The goal of **Governance** is to increase governance efficiency, while mitigating and eliminating malicious or erroneous proposals. * ## Details * Governance has **3 main contracts**: **GovernanceBravoDelegate, XVSVault, XVS** token. * - XVS token is the protocol token used for protocol users to cast their vote on submitted proposals. - XVSVault is the main staking contract for XVS. Users first stake their XVS in the vault and receive voting power proportional to their staked tokens that they can use to vote on proposals. Users also can choose to delegate their voting power to other users. * # Governor Bravo * `GovernanceBravoDelegate` is main Venus Governance contract. Users interact with it to: - Submit new proposal - Vote on a proposal - Cancel a proposal - Queue a proposal for execution with a timelock executor contract. `GovernanceBravoDelegate` uses the XVSVault to get restrict certain actions based on a user's voting power. The governance rules it inforces are: - A user's voting power must be greater than the `proposalThreshold` to submit a proposal - If a user's voting power drops below certain amount, anyone can cancel the the proposal. The governance guardian and proposal creator can also cancel a proposal at anytime before it is queued for execution. * ## Venus Improvement Proposal * Venus Governance allows for Venus Improvement Proposals (VIPs) to be categorized based on their impact and risk levels. This allows for optimizing proposals execution to allow for things such as expediting interest rate changes and quickly updating risk parameters, while moving slower on other types of proposals that can prevent a larger risk to the protocol and are not urgent. There are three different types of VIPs with different proposal paramters: * - `NORMAL` - `FASTTRACK` - `CRITICAL` * When initializing the `GovernorBravo` contract, the parameters for the three routes are set. The parameters are: * - `votingDelay`: The delay in blocks between submitting a proposal and when voting begins - `votingPeriod`: The number of blocks where voting will be open - `proposalThreshold`: The number of votes required in order submit a proposal * There is also a separate timelock executor contract for each route, which is used to dispatch the VIP for execution, giving even more control over the flow of each type of VIP. * ## Voting * After a VIP is proposed, voting is opened after the `votingDelay` has passed. For example, if `votingDelay = 0`, then voting will begin in the next block after the proposal has been submitted. After the delay, the proposal state is `ACTIVE` and users can cast their vote `for`, `against`, or `abstain`, weighted by their total voting power (tokens + delegated voting power). Abstaining from a voting allows for a vote to be cast and optionally include a comment, without the incrementing for or against vote count. The total voting power for the user is obtained by calling XVSVault's `getPriorVotes`. * `GovernorBravoDelegate` also accepts [EIP-712](https://eips.ethereum.org/EIPS/eip-712) signatures for voting on proposals via the external function `castVoteBySig`. * ## Delegating * A users voting power includes the amount of staked XVS the have staked as well as the votes delegate to them. Delegating is the process of a user loaning their voting power to another, so that the latter has the combined voting power of both users. This is an important feature because it allows for a user to let another user who they trust propose or vote in their place. * The delegation of votes happens through the `XVSVault` contract by calling the `delegate` or `delegateBySig` functions. These same functions can revert vote delegation by calling the same function with a value of `0`."
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 1797,
        "contract": "contracts/Governance/GovernorBravoDelegate.sol:GovernorBravoDelegate",
        "label": "admin",
        "offset": 0,
        "slot": "0",
        "type": "t_address"
      },
      {
        "astId": 1799,
        "contract": "contracts/Governance/GovernorBravoDelegate.sol:GovernorBravoDelegate",
        "label": "pendingAdmin",
        "offset": 0,
        "slot": "1",
        "type": "t_address"
      },
      {
        "astId": 1801,
        "contract": "contracts/Governance/GovernorBravoDelegate.sol:GovernorBravoDelegate",
        "label": "implementation",
        "offset": 0,
        "slot": "2",
        "type": "t_address"
      },
      {
        "astId": 1806,
        "contract": "contracts/Governance/GovernorBravoDelegate.sol:GovernorBravoDelegate",
        "label": "votingDelay",
        "offset": 0,
        "slot": "3",
        "type": "t_uint256"
      },
      {
        "astId": 1808,
        "contract": "contracts/Governance/GovernorBravoDelegate.sol:GovernorBravoDelegate",
        "label": "votingPeriod",
        "offset": 0,
        "slot": "4",
        "type": "t_uint256"
      },
      {
        "astId": 1810,
        "contract": "contracts/Governance/GovernorBravoDelegate.sol:GovernorBravoDelegate",
        "label": "proposalThreshold",
        "offset": 0,
        "slot": "5",
        "type": "t_uint256"
      },
      {
        "astId": 1812,
        "contract": "contracts/Governance/GovernorBravoDelegate.sol:GovernorBravoDelegate",
        "label": "initialProposalId",
        "offset": 0,
        "slot": "6",
        "type": "t_uint256"
      },
      {
        "astId": 1814,
        "contract": "contracts/Governance/GovernorBravoDelegate.sol:GovernorBravoDelegate",
        "label": "proposalCount",
        "offset": 0,
        "slot": "7",
        "type": "t_uint256"
      },
      {
        "astId": 1816,
        "contract": "contracts/Governance/GovernorBravoDelegate.sol:GovernorBravoDelegate",
        "label": "timelock",
        "offset": 0,
        "slot": "8",
        "type": "t_contract(TimelockInterface)1986"
      },
      {
        "astId": 1818,
        "contract": "contracts/Governance/GovernorBravoDelegate.sol:GovernorBravoDelegate",
        "label": "xvsVault",
        "offset": 0,
        "slot": "9",
        "type": "t_contract(XvsVaultInterface)1996"
      },
      {
        "astId": 1822,
        "contract": "contracts/Governance/GovernorBravoDelegate.sol:GovernorBravoDelegate",
        "label": "proposals",
        "offset": 0,
        "slot": "10",
        "type": "t_mapping(t_uint256,t_struct(Proposal)1865_storage)"
      },
      {
        "astId": 1826,
        "contract": "contracts/Governance/GovernorBravoDelegate.sol:GovernorBravoDelegate",
        "label": "latestProposalIds",
        "offset": 0,
        "slot": "11",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 1883,
        "contract": "contracts/Governance/GovernorBravoDelegate.sol:GovernorBravoDelegate",
        "label": "proposalMaxOperations",
        "offset": 0,
        "slot": "12",
        "type": "t_uint256"
      },
      {
        "astId": 1885,
        "contract": "contracts/Governance/GovernorBravoDelegate.sol:GovernorBravoDelegate",
        "label": "guardian",
        "offset": 0,
        "slot": "13",
        "type": "t_address"
      },
      {
        "astId": 1903,
        "contract": "contracts/Governance/GovernorBravoDelegate.sol:GovernorBravoDelegate",
        "label": "proposalConfigs",
        "offset": 0,
        "slot": "14",
        "type": "t_mapping(t_uint256,t_struct(ProposalConfig)1899_storage)"
      },
      {
        "astId": 1907,
        "contract": "contracts/Governance/GovernorBravoDelegate.sol:GovernorBravoDelegate",
        "label": "proposalTimelocks",
        "offset": 0,
        "slot": "15",
        "type": "t_mapping(t_uint256,t_contract(TimelockInterface)1986)"
      },
      {
        "astId": 1921,
        "contract": "contracts/Governance/GovernorBravoDelegate.sol:GovernorBravoDelegate",
        "label": "validationParams",
        "offset": 0,
        "slot": "16",
        "type": "t_struct(ValidationParams)1919_storage"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_address)dyn_storage": {
        "base": "t_address",
        "encoding": "dynamic_array",
        "label": "address[]",
        "numberOfBytes": "32"
      },
      "t_array(t_bytes_storage)dyn_storage": {
        "base": "t_bytes_storage",
        "encoding": "dynamic_array",
        "label": "bytes[]",
        "numberOfBytes": "32"
      },
      "t_array(t_string_storage)dyn_storage": {
        "base": "t_string_storage",
        "encoding": "dynamic_array",
        "label": "string[]",
        "numberOfBytes": "32"
      },
      "t_array(t_uint256)dyn_storage": {
        "base": "t_uint256",
        "encoding": "dynamic_array",
        "label": "uint256[]",
        "numberOfBytes": "32"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_bytes_storage": {
        "encoding": "bytes",
        "label": "bytes",
        "numberOfBytes": "32"
      },
      "t_contract(TimelockInterface)1986": {
        "encoding": "inplace",
        "label": "contract TimelockInterface",
        "numberOfBytes": "20"
      },
      "t_contract(XvsVaultInterface)1996": {
        "encoding": "inplace",
        "label": "contract XvsVaultInterface",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_struct(Receipt)1872_storage)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => struct GovernorBravoDelegateStorageV1.Receipt)",
        "numberOfBytes": "32",
        "value": "t_struct(Receipt)1872_storage"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_mapping(t_uint256,t_contract(TimelockInterface)1986)": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => contract TimelockInterface)",
        "numberOfBytes": "32",
        "value": "t_contract(TimelockInterface)1986"
      },
      "t_mapping(t_uint256,t_struct(Proposal)1865_storage)": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => struct GovernorBravoDelegateStorageV1.Proposal)",
        "numberOfBytes": "32",
        "value": "t_struct(Proposal)1865_storage"
      },
      "t_mapping(t_uint256,t_struct(ProposalConfig)1899_storage)": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => struct GovernorBravoDelegateStorageV2.ProposalConfig)",
        "numberOfBytes": "32",
        "value": "t_struct(ProposalConfig)1899_storage"
      },
      "t_string_storage": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      },
      "t_struct(Proposal)1865_storage": {
        "encoding": "inplace",
        "label": "struct GovernorBravoDelegateStorageV1.Proposal",
        "members": [
          {
            "astId": 1828,
            "contract": "contracts/Governance/GovernorBravoDelegate.sol:GovernorBravoDelegate",
            "label": "id",
            "offset": 0,
            "slot": "0",
            "type": "t_uint256"
          },
          {
            "astId": 1830,
            "contract": "contracts/Governance/GovernorBravoDelegate.sol:GovernorBravoDelegate",
            "label": "proposer",
            "offset": 0,
            "slot": "1",
            "type": "t_address"
          },
          {
            "astId": 1832,
            "contract": "contracts/Governance/GovernorBravoDelegate.sol:GovernorBravoDelegate",
            "label": "eta",
            "offset": 0,
            "slot": "2",
            "type": "t_uint256"
          },
          {
            "astId": 1835,
            "contract": "contracts/Governance/GovernorBravoDelegate.sol:GovernorBravoDelegate",
            "label": "targets",
            "offset": 0,
            "slot": "3",
            "type": "t_array(t_address)dyn_storage"
          },
          {
            "astId": 1838,
            "contract": "contracts/Governance/GovernorBravoDelegate.sol:GovernorBravoDelegate",
            "label": "values",
            "offset": 0,
            "slot": "4",
            "type": "t_array(t_uint256)dyn_storage"
          },
          {
            "astId": 1841,
            "contract": "contracts/Governance/GovernorBravoDelegate.sol:GovernorBravoDelegate",
            "label": "signatures",
            "offset": 0,
            "slot": "5",
            "type": "t_array(t_string_storage)dyn_storage"
          },
          {
            "astId": 1844,
            "contract": "contracts/Governance/GovernorBravoDelegate.sol:GovernorBravoDelegate",
            "label": "calldatas",
            "offset": 0,
            "slot": "6",
            "type": "t_array(t_bytes_storage)dyn_storage"
          },
          {
            "astId": 1846,
            "contract": "contracts/Governance/GovernorBravoDelegate.sol:GovernorBravoDelegate",
            "label": "startBlock",
            "offset": 0,
            "slot": "7",
            "type": "t_uint256"
          },
          {
            "astId": 1848,
            "contract": "contracts/Governance/GovernorBravoDelegate.sol:GovernorBravoDelegate",
            "label": "endBlock",
            "offset": 0,
            "slot": "8",
            "type": "t_uint256"
          },
          {
            "astId": 1850,
            "contract": "contracts/Governance/GovernorBravoDelegate.sol:GovernorBravoDelegate",
            "label": "forVotes",
            "offset": 0,
            "slot": "9",
            "type": "t_uint256"
          },
          {
            "astId": 1852,
            "contract": "contracts/Governance/GovernorBravoDelegate.sol:GovernorBravoDelegate",
            "label": "againstVotes",
            "offset": 0,
            "slot": "10",
            "type": "t_uint256"
          },
          {
            "astId": 1854,
            "contract": "contracts/Governance/GovernorBravoDelegate.sol:GovernorBravoDelegate",
            "label": "abstainVotes",
            "offset": 0,
            "slot": "11",
            "type": "t_uint256"
          },
          {
            "astId": 1856,
            "contract": "contracts/Governance/GovernorBravoDelegate.sol:GovernorBravoDelegate",
            "label": "canceled",
            "offset": 0,
            "slot": "12",
            "type": "t_bool"
          },
          {
            "astId": 1858,
            "contract": "contracts/Governance/GovernorBravoDelegate.sol:GovernorBravoDelegate",
            "label": "executed",
            "offset": 1,
            "slot": "12",
            "type": "t_bool"
          },
          {
            "astId": 1862,
            "contract": "contracts/Governance/GovernorBravoDelegate.sol:GovernorBravoDelegate",
            "label": "receipts",
            "offset": 0,
            "slot": "13",
            "type": "t_mapping(t_address,t_struct(Receipt)1872_storage)"
          },
          {
            "astId": 1864,
            "contract": "contracts/Governance/GovernorBravoDelegate.sol:GovernorBravoDelegate",
            "label": "proposalType",
            "offset": 0,
            "slot": "14",
            "type": "t_uint8"
          }
        ],
        "numberOfBytes": "480"
      },
      "t_struct(ProposalConfig)1899_storage": {
        "encoding": "inplace",
        "label": "struct GovernorBravoDelegateStorageV2.ProposalConfig",
        "members": [
          {
            "astId": 1894,
            "contract": "contracts/Governance/GovernorBravoDelegate.sol:GovernorBravoDelegate",
            "label": "votingDelay",
            "offset": 0,
            "slot": "0",
            "type": "t_uint256"
          },
          {
            "astId": 1896,
            "contract": "contracts/Governance/GovernorBravoDelegate.sol:GovernorBravoDelegate",
            "label": "votingPeriod",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256"
          },
          {
            "astId": 1898,
            "contract": "contracts/Governance/GovernorBravoDelegate.sol:GovernorBravoDelegate",
            "label": "proposalThreshold",
            "offset": 0,
            "slot": "2",
            "type": "t_uint256"
          }
        ],
        "numberOfBytes": "96"
      },
      "t_struct(Receipt)1872_storage": {
        "encoding": "inplace",
        "label": "struct GovernorBravoDelegateStorageV1.Receipt",
        "members": [
          {
            "astId": 1867,
            "contract": "contracts/Governance/GovernorBravoDelegate.sol:GovernorBravoDelegate",
            "label": "hasVoted",
            "offset": 0,
            "slot": "0",
            "type": "t_bool"
          },
          {
            "astId": 1869,
            "contract": "contracts/Governance/GovernorBravoDelegate.sol:GovernorBravoDelegate",
            "label": "support",
            "offset": 1,
            "slot": "0",
            "type": "t_uint8"
          },
          {
            "astId": 1871,
            "contract": "contracts/Governance/GovernorBravoDelegate.sol:GovernorBravoDelegate",
            "label": "votes",
            "offset": 2,
            "slot": "0",
            "type": "t_uint96"
          }
        ],
        "numberOfBytes": "32"
      },
      "t_struct(ValidationParams)1919_storage": {
        "encoding": "inplace",
        "label": "struct GovernorBravoDelegateStorageV3.ValidationParams",
        "members": [
          {
            "astId": 1912,
            "contract": "contracts/Governance/GovernorBravoDelegate.sol:GovernorBravoDelegate",
            "label": "minVotingPeriod",
            "offset": 0,
            "slot": "0",
            "type": "t_uint256"
          },
          {
            "astId": 1914,
            "contract": "contracts/Governance/GovernorBravoDelegate.sol:GovernorBravoDelegate",
            "label": "maxVotingPeriod",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256"
          },
          {
            "astId": 1916,
            "contract": "contracts/Governance/GovernorBravoDelegate.sol:GovernorBravoDelegate",
            "label": "minVotingDelay",
            "offset": 0,
            "slot": "2",
            "type": "t_uint256"
          },
          {
            "astId": 1918,
            "contract": "contracts/Governance/GovernorBravoDelegate.sol:GovernorBravoDelegate",
            "label": "maxVotingDelay",
            "offset": 0,
            "slot": "3",
            "type": "t_uint256"
          }
        ],
        "numberOfBytes": "128"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      },
      "t_uint8": {
        "encoding": "inplace",
        "label": "uint8",
        "numberOfBytes": "1"
      },
      "t_uint96": {
        "encoding": "inplace",
        "label": "uint96",
        "numberOfBytes": "12"
      }
    }
  }
}
