{
  "address": "0x736c66489D8ebA0279D3518429C6cEd6450B1Cc9",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "contract IAccessControlManagerV8",
          "name": "_acm",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "PermissionsAdded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "PermissionsExecuted",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "ACM",
      "outputs": [
        {
          "internalType": "contract IAccessControlManagerV8",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "enum ACMCommandsAggregator.PermissionType",
              "name": "permissionType",
              "type": "uint8"
            },
            {
              "internalType": "address",
              "name": "contractAddress",
              "type": "address"
            },
            {
              "internalType": "string",
              "name": "functionSig",
              "type": "string"
            },
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "internalType": "struct ACMCommandsAggregator.Permission[]",
          "name": "_permissions",
          "type": "tuple[]"
        }
      ],
      "name": "addPermissions",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "executePermissions",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "permissions",
      "outputs": [
        {
          "internalType": "enum ACMCommandsAggregator.PermissionType",
          "name": "permissionType",
          "type": "uint8"
        },
        {
          "internalType": "address",
          "name": "contractAddress",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "functionSig",
          "type": "string"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "transactionHash": "0xcd9d1eecbe3d14f76378ae86f07b4ca259a1950d2912a5dda7f3b41e82a23e62",
  "receipt": {
    "to": null,
    "from": "0x464779C41C5f1Be598853C1F87bCC7087Ea75f28",
    "contractAddress": "0x736c66489D8ebA0279D3518429C6cEd6450B1Cc9",
    "transactionIndex": 68,
    "gasUsed": "889174",
    "logsBloom": "0x
    "blockHash": "0x98ee3316953901d5804c55aca06bef982cc030ecac0a3d29acc7bbcc7ef11785",
    "transactionHash": "0xcd9d1eecbe3d14f76378ae86f07b4ca259a1950d2912a5dda7f3b41e82a23e62",
    "logs": [],
    "blockNumber": 6674092,
    "cumulativeGasUsed": "7762549",
    "status": 1,
    "byzantium": true
  },
  "args": ["0xbf705C00578d43B6147ab4eaE04DBBEd1ccCdc96"],
  "numDeployments": 3,
  "solcInputHash": "d1b723608bc0e5c4e69b41a531154535",
  "metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract IAccessControlManagerV8\",\"name\":\"_acm\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"PermissionsAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"PermissionsExecuted\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"ACM\",\"outputs\":[{\"internalType\":\"contract IAccessControlManagerV8\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"enum ACMCommandsAggregator.PermissionType\",\"name\":\"permissionType\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"contractAddress\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"functionSig\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"internalType\":\"struct ACMCommandsAggregator.Permission[]\",\"name\":\"_permissions\",\"type\":\"tuple[]\"}],\"name\":\"addPermissions\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"executePermissions\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"permissions\",\"outputs\":[{\"internalType\":\"enum ACMCommandsAggregator.PermissionType\",\"name\":\"permissionType\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"contractAddress\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"functionSig\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"ACM()\":{\"notice\":\"Access control manager contract\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Governance/ACMCommandsAggregator.sol\":\"ACMCommandsAggregator\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":10000},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (access/IAccessControl.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev External interface of AccessControl declared to support ERC165 detection.\\n */\\ninterface IAccessControl {\\n    /**\\n     * @dev Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole`\\n     *\\n     * `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite\\n     * {RoleAdminChanged} not being emitted signaling this.\\n     *\\n     * _Available since v3.1._\\n     */\\n    event RoleAdminChanged(bytes32 indexed role, bytes32 indexed previousAdminRole, bytes32 indexed newAdminRole);\\n\\n    /**\\n     * @dev Emitted when `account` is granted `role`.\\n     *\\n     * `sender` is the account that originated the contract call, an admin role\\n     * bearer except when using {AccessControl-_setupRole}.\\n     */\\n    event RoleGranted(bytes32 indexed role, address indexed account, address indexed sender);\\n\\n    /**\\n     * @dev Emitted when `account` is revoked `role`.\\n     *\\n     * `sender` is the account that originated the contract call:\\n     *   - if using `revokeRole`, it is the admin role bearer\\n     *   - if using `renounceRole`, it is the role bearer (i.e. `account`)\\n     */\\n    event RoleRevoked(bytes32 indexed role, address indexed account, address indexed sender);\\n\\n    /**\\n     * @dev Returns `true` if `account` has been granted `role`.\\n     */\\n    function hasRole(bytes32 role, address account) external view returns (bool);\\n\\n    /**\\n     * @dev Returns the admin role that controls `role`. See {grantRole} and\\n     * {revokeRole}.\\n     *\\n     * To change a role's admin, use {AccessControl-_setRoleAdmin}.\\n     */\\n    function getRoleAdmin(bytes32 role) external view returns (bytes32);\\n\\n    /**\\n     * @dev Grants `role` to `account`.\\n     *\\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\\n     * event.\\n     *\\n     * Requirements:\\n     *\\n     * - the caller must have ``role``'s admin role.\\n     */\\n    function grantRole(bytes32 role, address account) external;\\n\\n    /**\\n     * @dev Revokes `role` from `account`.\\n     *\\n     * If `account` had been granted `role`, emits a {RoleRevoked} event.\\n     *\\n     * Requirements:\\n     *\\n     * - the caller must have ``role``'s admin role.\\n     */\\n    function revokeRole(bytes32 role, address account) external;\\n\\n    /**\\n     * @dev Revokes `role` from the calling account.\\n     *\\n     * Roles are often managed via {grantRole} and {revokeRole}: this function's\\n     * purpose is to provide a mechanism for accounts to lose their privileges\\n     * if they are compromised (such as when a trusted device is misplaced).\\n     *\\n     * If the calling account had been granted `role`, emits a {RoleRevoked}\\n     * event.\\n     *\\n     * Requirements:\\n     *\\n     * - the caller must be `account`.\\n     */\\n    function renounceRole(bytes32 role, address account) external;\\n}\\n\",\"keccak256\":\"0x59ce320a585d7e1f163cd70390a0ef2ff9cec832e2aa544293a00692465a7a57\",\"license\":\"MIT\"},\"contracts/Governance/ACMCommandsAggregator.sol\":{\"content\":\"// SPDX-License-Identifier: BSD-3-Clause\\npragma solidity 0.8.25;\\n\\nimport {IAccessControlManagerV8} from \\\"../Governance/IAccessControlManagerV8.sol\\\";\\n\\ncontract ACMCommandsAggregator {\\n    /*\\n     * @notice Enum to differentiate between giving and revoking permissions\\n     */\\n    enum PermissionType {\\n        GIVE,\\n        REVOKE\\n    }\\n\\n    /*\\n     * @notice Struct to store permission details\\n     */\\n    struct Permission {\\n        /*\\n         * @notice Type of permission\\n         */   \\n        PermissionType permissionType;\\n\\n        /*\\n         * @notice Address of the contract\\n         */\\n        address contractAddress;\\n\\n        /*\\n         * @notice Function signature\\n         */\\n        string functionSig;\\n\\n        /*\\n         * @notice Address of the account\\n         */\\n        address account;\\n    }\\n\\n    /**\\n     * @notice Access control manager contract\\n     */\\n    IAccessControlManagerV8 immutable public ACM;\\n\\n    /*\\n     * @notice Mapping to store permissions\\n     */\\n    mapping (uint256 => Permission[]) public permissions;\\n\\n    /*\\n     * @notice Index for the next permissions\\n     */\\n    uint256 nextIndex;\\n\\n    /*\\n     * @notice Event emitted when permissions are added\\n     */\\n    event PermissionsAdded(uint256 index);\\n\\n    /*\\n     * @notice Event emitted when permissions are executed\\n     */\\n    event PermissionsExecuted(uint256 index);\\n\\n    /*\\n     * @notice Constructor to set the access control manager\\n     * @param _acm Address of the access control manager\\n     */\\n    constructor(IAccessControlManagerV8 _acm) {\\n        ACM = _acm;\\n    }\\n\\n    /*\\n     * @notice Function to add permissions\\n     * @param _permissions Array of permissions\\n     */\\n    function addPermissions(Permission[] memory _permissions) external {\\n        for (uint256 i = 0; i < _permissions.length; i++) {\\n            permissions[nextIndex].push(Permission(_permissions[i].permissionType, _permissions[i].contractAddress, _permissions[i].functionSig, _permissions[i].account));\\n        }\\n\\n        emit PermissionsAdded(nextIndex);\\n        nextIndex++;\\n    }\\n\\n    /*\\n     * @notice Function to execute permissions\\n     * @param index Index of the permissions array\\n     */\\n    function executePermissions(uint256 index) external {\\n        for (uint256 i = 0; i < permissions[index].length; i++) {\\n            if (permissions[index][i].permissionType == PermissionType.GIVE) {\\n                ACM.giveCallPermission(permissions[index][i].contractAddress, permissions[index][i].functionSig, permissions[index][i].account);\\n            } else {\\n                ACM.revokeCallPermission(permissions[index][i].contractAddress, permissions[index][i].functionSig, permissions[index][i].account);\\n            }\\n        }\\n\\n        emit PermissionsExecuted(index);\\n    }\\n}\",\"keccak256\":\"0xa61a626668347cba93e490cad5654790ded89c1b59e5b462dfe0f5f74b22a8fa\",\"license\":\"BSD-3-Clause\"},\"contracts/Governance/IAccessControlManagerV8.sol\":{\"content\":\"// SPDX-License-Identifier: BSD-3-Clause\\npragma solidity ^0.8.25;\\n\\nimport \\\"@openzeppelin/contracts/access/IAccessControl.sol\\\";\\n\\n/**\\n * @title IAccessControlManagerV8\\n * @author Venus\\n * @notice Interface implemented by the `AccessControlManagerV8` contract.\\n */\\ninterface IAccessControlManagerV8 is IAccessControl {\\n    function giveCallPermission(address contractAddress, string calldata functionSig, address accountToPermit) external;\\n\\n    function revokeCallPermission(\\n        address contractAddress,\\n        string calldata functionSig,\\n        address accountToRevoke\\n    ) external;\\n\\n    function isAllowedToCall(address account, string calldata functionSig) external view returns (bool);\\n\\n    function hasPermission(\\n        address account,\\n        address contractAddress,\\n        string calldata functionSig\\n    ) external view returns (bool);\\n}\\n\",\"keccak256\":\"0xaa29b098440d0b3a131c5ecdf25ce548790c1b5ac7bf9b5c0264b6af6f7a1e0b\",\"license\":\"BSD-3-Clause\"}},\"version\":1}",
  "bytecode": "0x60a0604052348015600f57600080fd5b50604051610fba380380610fba833981016040819052602c91603c565b6001600160a01b0316608052606a565b600060208284031215604d57600080fd5b81516001600160a01b0381168114606357600080fd5b9392505050565b608051610f286100926000396000818160aa0152818161025701526103db0152610f286000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c80636856e01b146100515780639210bab51461007d578063a6e0094014610092578063f9b80da1146100a5575b600080fd5b61006461005f3660046107f4565b6100f1565b6040516100749493929190610845565b60405180910390f35b61009061008b366004610931565b6101f2565b005b6100906100a0366004610a1a565b610598565b6100cc7f000000000000000000000000000000000000000000000000000000000000000081565b60405173ffffffffffffffffffffffffffffffffffffffff9091168152602001610074565b6000602052816000526040600020818154811061010d57600080fd5b60009182526020909120600390910201805460018201805460ff8316955061010090920473ffffffffffffffffffffffffffffffffffffffff1693509061015390610bb7565b80601f016020809104026020016040519081016040528092919081815260200182805461017f90610bb7565b80156101cc5780601f106101a1576101008083540402835291602001916101cc565b820191906000526020600020905b8154815290600101906020018083116101af57829003601f168201915b5050506002909301549192505073ffffffffffffffffffffffffffffffffffffffff1684565b60005b60008281526020819052604090205481101561056157600082815260208190526040812080548390811061022b5761022b610c0a565b600091825260209091206003909102015460ff16600181111561025057610250610816565b036103d9577f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663584f6b6060008085815260200190815260200160002083815481106102b4576102b4610c0a565b906000526020600020906003020160000160019054906101000a900473ffffffffffffffffffffffffffffffffffffffff16600080868152602001908152602001600020848154811061030957610309610c0a565b9060005260206000209060030201600101600080878152602001908152602001600020858154811061033d5761033d610c0a565b60009182526020909120600260039092020101546040517fffffffff0000000000000000000000000000000000000000000000000000000060e086901b1681526103a293929173ffffffffffffffffffffffffffffffffffffffff1690600401610c39565b600060405180830381600087803b1580156103bc57600080fd5b505af11580156103d0573d6000803e3d6000fd5b50505050610559565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663545f7a32600080858152602001908152602001600020838154811061043857610438610c0a565b906000526020600020906003020160000160019054906101000a900473ffffffffffffffffffffffffffffffffffffffff16600080868152602001908152602001600020848154811061048d5761048d610c0a565b906000526020600020906003020160010160008087815260200190815260200160002085815481106104c1576104c1610c0a565b60009182526020909120600260039092020101546040517fffffffff0000000000000000000000000000000000000000000000000000000060e086901b16815261052693929173ffffffffffffffffffffffffffffffffffffffff1690600401610c39565b600060405180830381600087803b15801561054057600080fd5b505af1158015610554573d6000803e3d6000fd5b505050505b6001016101f5565b506040518181527f7e42a578fd3c37b242043b66ad941a7ed0464f705d18d73a7a9ffa9793c2e6819060200160405180910390a150565b60005b81518110156107a057600080600154815260200190815260200160002060405180608001604052808484815181106105d5576105d5610c0a565b60200260200101516000015160018111156105f2576105f2610816565b815260200184848151811061060957610609610c0a565b60200260200101516020015173ffffffffffffffffffffffffffffffffffffffff16815260200184848151811061064257610642610c0a565b602002602001015160400151815260200184848151811061066557610665610c0a565b6020908102919091018101516060015173ffffffffffffffffffffffffffffffffffffffff169091528254600181810185556000948552919093208251600390940201805492939092909183917fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00169083818111156106e6576106e6610816565b02179055506020820151815473ffffffffffffffffffffffffffffffffffffffff909116610100027fffffffffffffffffffffff0000000000000000000000000000000000000000ff909116178155604082015160018201906107499082610d79565b5060609190910151600290910180547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff90921691909117905560010161059b565b507f65febd51819bfc46e292009fef9f84536cc626e9d30a69ec56ccd80ebdb792fc6001546040516107d491815260200190565b60405180910390a1600180549060006107ec83610e93565b919050555050565b6000806040838503121561080757600080fd5b50508035926020909101359150565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b60006002861061087e577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b858252602073ffffffffffffffffffffffffffffffffffffffff8616602084015260806040840152845180608085015260005b818110156108cd5786810183015185820160a0015282016108b1565b50600060a0828601015260a07fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f83011685010192505050610928606083018473ffffffffffffffffffffffffffffffffffffffff169052565b95945050505050565b60006020828403121561094357600080fd5b5035919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6040516080810167ffffffffffffffff8111828210171561099c5761099c61094a565b60405290565b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016810167ffffffffffffffff811182821017156109e9576109e961094a565b604052919050565b803573ffffffffffffffffffffffffffffffffffffffff81168114610a1557600080fd5b919050565b60006020808385031215610a2d57600080fd5b823567ffffffffffffffff80821115610a4557600080fd5b818501915085601f830112610a5957600080fd5b813581811115610a6b57610a6b61094a565b8060051b610a7a8582016109a2565b9182528381018501918581019089841115610a9457600080fd5b86860192505b83831015610baa57823585811115610ab157600080fd5b86017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe06080828d0382011215610ae657600080fd5b610aee610979565b8983013560028110610aff57600080fd5b81526040610b0e8482016109f1565b8b830152606084013589811115610b255760008081fd5b8401603f81018f13610b375760008081fd5b8b8101358a811115610b4b57610b4b61094a565b610b5b8d86601f840116016109a2565b94508085528f83828401011115610b725760008081fd5b808383018e87013760009085018d0152508101829052610b94608084016109f1565b6060820152845250509186019190860190610a9a565b9998505050505050505050565b600181811c90821680610bcb57607f821691505b602082108103610c04577f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b73ffffffffffffffffffffffffffffffffffffffff84168152600060206060602084015260008554610c6a81610bb7565b8060608701526080600180841660008114610c8c5760018114610cc657610cf6565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00851660808a0152608084151560051b8a01019550610cf6565b8a600052602060002060005b85811015610ced5781548b8201860152908301908801610cd2565b8a016080019650505b5050505073ffffffffffffffffffffffffffffffffffffffff86166040860152509150610d209050565b949350505050565b601f821115610d74576000816000526020600020601f850160051c81016020861015610d515750805b601f850160051c820191505b81811015610d7057828155600101610d5d565b5050505b505050565b815167ffffffffffffffff811115610d9357610d9361094a565b610da781610da18454610bb7565b84610d28565b602080601f831160018114610dfa5760008415610dc45750858301515b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff600386901b1c1916600185901b178555610d70565b6000858152602081207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08616915b82811015610e4757888601518255948401946001909101908401610e28565b5085821015610e8357878501517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff600388901b60f8161c191681555b5050505050600190811b01905550565b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203610eeb577f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b506001019056fea2646970667358221220231eb9580a3e4ad5c9fdeee66857503eb80a4e6f5daa09e7742febd70fb0244c64736f6c63430008190033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b506004361061004c5760003560e01c80636856e01b146100515780639210bab51461007d578063a6e0094014610092578063f9b80da1146100a5575b600080fd5b61006461005f3660046107f4565b6100f1565b6040516100749493929190610845565b60405180910390f35b61009061008b366004610931565b6101f2565b005b6100906100a0366004610a1a565b610598565b6100cc7f000000000000000000000000000000000000000000000000000000000000000081565b60405173ffffffffffffffffffffffffffffffffffffffff9091168152602001610074565b6000602052816000526040600020818154811061010d57600080fd5b60009182526020909120600390910201805460018201805460ff8316955061010090920473ffffffffffffffffffffffffffffffffffffffff1693509061015390610bb7565b80601f016020809104026020016040519081016040528092919081815260200182805461017f90610bb7565b80156101cc5780601f106101a1576101008083540402835291602001916101cc565b820191906000526020600020905b8154815290600101906020018083116101af57829003601f168201915b5050506002909301549192505073ffffffffffffffffffffffffffffffffffffffff1684565b60005b60008281526020819052604090205481101561056157600082815260208190526040812080548390811061022b5761022b610c0a565b600091825260209091206003909102015460ff16600181111561025057610250610816565b036103d9577f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663584f6b6060008085815260200190815260200160002083815481106102b4576102b4610c0a565b906000526020600020906003020160000160019054906101000a900473ffffffffffffffffffffffffffffffffffffffff16600080868152602001908152602001600020848154811061030957610309610c0a565b9060005260206000209060030201600101600080878152602001908152602001600020858154811061033d5761033d610c0a565b60009182526020909120600260039092020101546040517fffffffff0000000000000000000000000000000000000000000000000000000060e086901b1681526103a293929173ffffffffffffffffffffffffffffffffffffffff1690600401610c39565b600060405180830381600087803b1580156103bc57600080fd5b505af11580156103d0573d6000803e3d6000fd5b50505050610559565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663545f7a32600080858152602001908152602001600020838154811061043857610438610c0a565b906000526020600020906003020160000160019054906101000a900473ffffffffffffffffffffffffffffffffffffffff16600080868152602001908152602001600020848154811061048d5761048d610c0a565b906000526020600020906003020160010160008087815260200190815260200160002085815481106104c1576104c1610c0a565b60009182526020909120600260039092020101546040517fffffffff0000000000000000000000000000000000000000000000000000000060e086901b16815261052693929173ffffffffffffffffffffffffffffffffffffffff1690600401610c39565b600060405180830381600087803b15801561054057600080fd5b505af1158015610554573d6000803e3d6000fd5b505050505b6001016101f5565b506040518181527f7e42a578fd3c37b242043b66ad941a7ed0464f705d18d73a7a9ffa9793c2e6819060200160405180910390a150565b60005b81518110156107a057600080600154815260200190815260200160002060405180608001604052808484815181106105d5576105d5610c0a565b60200260200101516000015160018111156105f2576105f2610816565b815260200184848151811061060957610609610c0a565b60200260200101516020015173ffffffffffffffffffffffffffffffffffffffff16815260200184848151811061064257610642610c0a565b602002602001015160400151815260200184848151811061066557610665610c0a565b6020908102919091018101516060015173ffffffffffffffffffffffffffffffffffffffff169091528254600181810185556000948552919093208251600390940201805492939092909183917fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00169083818111156106e6576106e6610816565b02179055506020820151815473ffffffffffffffffffffffffffffffffffffffff909116610100027fffffffffffffffffffffff0000000000000000000000000000000000000000ff909116178155604082015160018201906107499082610d79565b5060609190910151600290910180547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff90921691909117905560010161059b565b507f65febd51819bfc46e292009fef9f84536cc626e9d30a69ec56ccd80ebdb792fc6001546040516107d491815260200190565b60405180910390a1600180549060006107ec83610e93565b919050555050565b6000806040838503121561080757600080fd5b50508035926020909101359150565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b60006002861061087e577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b858252602073ffffffffffffffffffffffffffffffffffffffff8616602084015260806040840152845180608085015260005b818110156108cd5786810183015185820160a0015282016108b1565b50600060a0828601015260a07fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f83011685010192505050610928606083018473ffffffffffffffffffffffffffffffffffffffff169052565b95945050505050565b60006020828403121561094357600080fd5b5035919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6040516080810167ffffffffffffffff8111828210171561099c5761099c61094a565b60405290565b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016810167ffffffffffffffff811182821017156109e9576109e961094a565b604052919050565b803573ffffffffffffffffffffffffffffffffffffffff81168114610a1557600080fd5b919050565b60006020808385031215610a2d57600080fd5b823567ffffffffffffffff80821115610a4557600080fd5b818501915085601f830112610a5957600080fd5b813581811115610a6b57610a6b61094a565b8060051b610a7a8582016109a2565b9182528381018501918581019089841115610a9457600080fd5b86860192505b83831015610baa57823585811115610ab157600080fd5b86017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe06080828d0382011215610ae657600080fd5b610aee610979565b8983013560028110610aff57600080fd5b81526040610b0e8482016109f1565b8b830152606084013589811115610b255760008081fd5b8401603f81018f13610b375760008081fd5b8b8101358a811115610b4b57610b4b61094a565b610b5b8d86601f840116016109a2565b94508085528f83828401011115610b725760008081fd5b808383018e87013760009085018d0152508101829052610b94608084016109f1565b6060820152845250509186019190860190610a9a565b9998505050505050505050565b600181811c90821680610bcb57607f821691505b602082108103610c04577f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b73ffffffffffffffffffffffffffffffffffffffff84168152600060206060602084015260008554610c6a81610bb7565b8060608701526080600180841660008114610c8c5760018114610cc657610cf6565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00851660808a0152608084151560051b8a01019550610cf6565b8a600052602060002060005b85811015610ced5781548b8201860152908301908801610cd2565b8a016080019650505b5050505073ffffffffffffffffffffffffffffffffffffffff86166040860152509150610d209050565b949350505050565b601f821115610d74576000816000526020600020601f850160051c81016020861015610d515750805b601f850160051c820191505b81811015610d7057828155600101610d5d565b5050505b505050565b815167ffffffffffffffff811115610d9357610d9361094a565b610da781610da18454610bb7565b84610d28565b602080601f831160018114610dfa5760008415610dc45750858301515b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff600386901b1c1916600185901b178555610d70565b6000858152602081207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08616915b82811015610e4757888601518255948401946001909101908401610e28565b5085821015610e8357878501517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff600388901b60f8161c191681555b5050505050600190811b01905550565b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203610eeb577f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b506001019056fea2646970667358221220231eb9580a3e4ad5c9fdeee66857503eb80a4e6f5daa09e7742febd70fb0244c64736f6c63430008190033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "ACM()": {
        "notice": "Access control manager contract"
      }
    },
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 99,
        "contract": "contracts/Governance/ACMCommandsAggregator.sol:ACMCommandsAggregator",
        "label": "permissions",
        "offset": 0,
        "slot": "0",
        "type": "t_mapping(t_uint256,t_array(t_struct(Permission)89_storage)dyn_storage)"
      },
      {
        "astId": 101,
        "contract": "contracts/Governance/ACMCommandsAggregator.sol:ACMCommandsAggregator",
        "label": "nextIndex",
        "offset": 0,
        "slot": "1",
        "type": "t_uint256"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_struct(Permission)89_storage)dyn_storage": {
        "base": "t_struct(Permission)89_storage",
        "encoding": "dynamic_array",
        "label": "struct ACMCommandsAggregator.Permission[]",
        "numberOfBytes": "32"
      },
      "t_enum(PermissionType)79": {
        "encoding": "inplace",
        "label": "enum ACMCommandsAggregator.PermissionType",
        "numberOfBytes": "1"
      },
      "t_mapping(t_uint256,t_array(t_struct(Permission)89_storage)dyn_storage)": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => struct ACMCommandsAggregator.Permission[])",
        "numberOfBytes": "32",
        "value": "t_array(t_struct(Permission)89_storage)dyn_storage"
      },
      "t_string_storage": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      },
      "t_struct(Permission)89_storage": {
        "encoding": "inplace",
        "label": "struct ACMCommandsAggregator.Permission",
        "members": [
          {
            "astId": 82,
            "contract": "contracts/Governance/ACMCommandsAggregator.sol:ACMCommandsAggregator",
            "label": "permissionType",
            "offset": 0,
            "slot": "0",
            "type": "t_enum(PermissionType)79"
          },
          {
            "astId": 84,
            "contract": "contracts/Governance/ACMCommandsAggregator.sol:ACMCommandsAggregator",
            "label": "contractAddress",
            "offset": 1,
            "slot": "0",
            "type": "t_address"
          },
          {
            "astId": 86,
            "contract": "contracts/Governance/ACMCommandsAggregator.sol:ACMCommandsAggregator",
            "label": "functionSig",
            "offset": 0,
            "slot": "1",
            "type": "t_string_storage"
          },
          {
            "astId": 88,
            "contract": "contracts/Governance/ACMCommandsAggregator.sol:ACMCommandsAggregator",
            "label": "account",
            "offset": 0,
            "slot": "2",
            "type": "t_address"
          }
        ],
        "numberOfBytes": "96"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}
